{
    "swagger": "2.0",
    "info": {
        "title": "Zingle API (Current)",
        "version": "2.0"
    },
    "host": "api.zingle.me",
    "paths": {
        "/services/{serviceId}/templates": {
            "post": {
                "responses": {
                    "201": {
                        "$ref": "#/responses/record-saved"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/serviceId"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/template-input"
                        },
                        "x-examples": {
                            "application/json": {
                                "name": "Ask for name",
                                "body": "May I please have your name?"
                            }
                        }
                    }
                ],
                "summary": "Create a template",
                "operationId": "create-template",
                "tags": [
                    "Templates"
                ]
            },
            "parameters": [
                {
                    "name": "serviceId",
                    "in": "path",
                    "type": "string",
                    "required": true,
                    "default": "1111-1111-1111-1111"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/template"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "name": "Welcome message",
                                    "body": "Welcome to the Hotel California!",
                                    "id": "73a6f8ea-21a1-09f0-bb53-fc71f8a305f7",
                                    "createdAt": "1998-09-16T03:31:59.791Z",
                                    "updatedAt": "1991-07-17T01:43:16.160Z"
                                },
                                {
                                    "name": "Checkout message",
                                    "body": "We are sorry to see you go!",
                                    "id": "a4564607-a0d2-3208-aff9-5dc535291a2c",
                                    "createdAt": "1972-09-01T00:28:56.859Z",
                                    "updatedAt": "1978-09-11T19:23:16.877Z"
                                },
                                {
                                    "name": "Follow-up",
                                    "body": "It looks like your requested item was delivered. Please let us know if you have any more questions.",
                                    "id": "26f989cf-4a40-7369-12b8-1d38565ac170",
                                    "createdAt": "1967-03-23T01:15:19.276Z",
                                    "updatedAt": "1965-01-27T08:09:50.060Z"
                                }
                            ]
                        }
                    }
                },
                "summary": "List Templates",
                "operationId": "list-templates",
                "tags": [
                    "Templates"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/serviceId"
                    }
                ]
            }
        },
        "/services/{serviceId}/templates/{templateId}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/template"
                        },
                        "examples": {
                            "application/json": {
                                "name": "Welcome message",
                                "body": "Welcome to the Hotel California!",
                                "id": "f1e2cfd1-51e3-01b6-3b7a-2f1cdfad3261",
                                "createdAt": "2014-02-09T23:20:18.906Z",
                                "updatedAt": "2012-05-07T10:42:07.598Z"
                            }
                        }
                    }
                },
                "summary": "Get a template",
                "operationId": "get-template",
                "tags": [
                    "Templates"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/serviceId"
                    },
                    {
                        "$ref": "#/parameters/templateId"
                    }
                ]
            },
            "parameters": [
                {
                    "name": "serviceId",
                    "in": "path",
                    "type": "string",
                    "required": true
                },
                {
                    "name": "templateId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "$ref": "#/responses/record-deleted"
                    }
                },
                "summary": "Delete template",
                "operationId": "delete-template",
                "tags": [
                    "Templates"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/serviceId"
                    },
                    {
                        "$ref": "#/parameters/templateId"
                    }
                ]
            },
            "put": {
                "responses": {
                    "202": {
                        "$ref": "#/responses/record-saved"
                    }
                },
                "summary": "Update template",
                "operationId": "update-template",
                "tags": [
                    "Templates"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/template-input"
                        },
                        "x-examples": {
                            "application/json": {
                                "name": "Welcome message",
                                "body": "Welcome to the Hotel California"
                            }
                        }
                    },
                    {
                        "$ref": "#/parameters/serviceId"
                    },
                    {
                        "$ref": "#/parameters/templateId"
                    }
                ]
            }
        },
        "/services/{serviceId}/contact-fields": {
            "post": {
                "responses": {
                    "201": {
                        "$ref": "#/responses/record-saved"
                    },
                    "400": {
                        "$ref": "#/responses/request-validation-failed"
                    },
                    "403": {
                        "$ref": "#/responses/request-validation-failed"
                    }
                },
                "operationId": "create-contact-field",
                "tags": [
                    "Contact Fields"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/serviceId"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/contact-field-input"
                        },
                        "x-examples": {
                            "application/json": {
                                "name": "Favorite flower",
                                "type": "string"
                            }
                        }
                    }
                ],
                "summary": "Create contact field"
            },
            "parameters": [
                {
                    "name": "serviceId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/contact-field"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "name": "iru",
                                    "type": "string",
                                    "id": "814f8732-f50f-564b-3339-fae4abaf4bbc",
                                    "options": [
                                        "dolore enim",
                                        "occaecat sunt cupidatat dolore",
                                        "laborum dolor ullamco exercitation",
                                        "pariatur in",
                                        "non aliquip Duis cupidatat"
                                    ],
                                    "createdAt": "1955-11-02T17:06:28.424Z",
                                    "updatedAt": "1960-01-05T06:32:46.094Z"
                                },
                                {
                                    "name": "Lo",
                                    "type": "boolean",
                                    "id": "e89f4b5c-0a77-e924-cc6f-8c4685597918",
                                    "createdAt": "1950-04-05T09:52:16.360Z",
                                    "updatedAt": "2018-01-14T19:19:18.947Z"
                                }
                            ]
                        }
                    }
                },
                "summary": "List contact fields",
                "operationId": "list-contact-fields",
                "tags": [
                    "Contact Fields"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/serviceId"
                    }
                ]
            }
        },
        "/services/{serviceId}/contact-fields/{contactFieldId}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/contact-field"
                        },
                        "examples": {
                            "application/json": {
                                "name": "Favorite flower",
                                "type": "string",
                                "id": "9793cf65-c072-11fc-a19b-6bb07930bb0b",
                                "createdAt": "2004-08-28T03:32:07.596Z",
                                "updatedAt": "2014-03-05T19:36:26.433Z"
                            }
                        }
                    }
                },
                "summary": "Get contact field",
                "operationId": "get-contact-field",
                "tags": [
                    "Contact Fields"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/serviceId"
                    },
                    {
                        "$ref": "#/parameters/contactFieldId"
                    }
                ]
            },
            "parameters": [
                {
                    "name": "serviceId",
                    "in": "path",
                    "type": "string",
                    "required": true
                },
                {
                    "name": "contactFieldId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "$ref": "#/responses/record-deleted"
                    }
                },
                "summary": "Delete contact field",
                "operationId": "delete-contact-field",
                "tags": [
                    "Contact Fields"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/serviceId"
                    },
                    {
                        "$ref": "#/parameters/contactFieldId"
                    }
                ]
            },
            "put": {
                "responses": {
                    "202": {
                        "$ref": "#/responses/record-saved"
                    },
                    "400": {
                        "$ref": "#/responses/request-validation-failed"
                    },
                    "403": {
                        "$ref": "#/responses/request-validation-failed"
                    }
                },
                "summary": "Update contact field",
                "operationId": "update-contact-field",
                "tags": [
                    "Contact Fields"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/contact-field-input"
                        },
                        "x-examples": {
                            "application/json": {
                                "name": "Favorite pizza topping",
                                "type": "string",
                                "options": [
                                    "pepperoni",
                                    "sausage",
                                    "onion"
                                ]
                            }
                        }
                    },
                    {
                        "$ref": "#/parameters/serviceId"
                    },
                    {
                        "$ref": "#/parameters/contactFieldId"
                    }
                ]
            }
        },
        "/services/{serviceId}/tags": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/tag"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "name": "exanim vel",
                                    "textColor": "#AFD6B8",
                                    "backgroundColor": "#AFD6B8",
                                    "id": "laborumtem",
                                    "createdAt": "1968-07-27T19:51:00.026Z",
                                    "updatedAt": "1985-08-29T15:01:12.503Z"
                                },
                                {
                                    "name": "et nostrud",
                                    "textColor": "#AFD6B8",
                                    "backgroundColor": "#AFD6B8",
                                    "id": "voluptate ",
                                    "createdAt": "1942-02-13T11:49:56.528Z",
                                    "updatedAt": "1942-11-16T16:21:02.881Z"
                                }
                            ]
                        }
                    }
                },
                "parameters": [],
                "summary": "List Tags",
                "tags": [
                    "Tags"
                ],
                "operationId": "list-tags"
            },
            "parameters": [
                {
                    "$ref": "#/parameters/serviceId"
                }
            ],
            "post": {
                "responses": {
                    "201": {
                        "$ref": "#/responses/record-saved"
                    }
                },
                "summary": "Create Tag",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/tag-input"
                        },
                        "x-examples": {
                            "application/json": {
                                "name": "elit labor",
                                "textColor": "#ffffff",
                                "backgroundColor": "#000000"
                            }
                        }
                    }
                ],
                "operationId": "create-tag",
                "tags": [
                    "Tags"
                ]
            }
        },
        "/services/{serviceId}/tags/{tagId}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/tag"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "name": "cupidatat ",
                                    "textColor": "#AFD6B8",
                                    "backgroundColor": "#AFD6B8",
                                    "id": "esse aliqu",
                                    "createdAt": "1975-12-08T06:06:36.971Z",
                                    "updatedAt": "1973-11-20T17:27:46.011Z"
                                },
                                {
                                    "name": "dosunt Ut ",
                                    "textColor": "#AFD6B8",
                                    "backgroundColor": "#AFD6B8",
                                    "id": "et Duis ut",
                                    "createdAt": "2002-12-30T18:35:40.010Z",
                                    "updatedAt": "1983-10-05T11:09:11.602Z"
                                }
                            ]
                        }
                    }
                },
                "parameters": [],
                "summary": "Get Tag",
                "operationId": "get-tag",
                "tags": [
                    "Tags"
                ]
            },
            "parameters": [
                {
                    "$ref": "#/parameters/serviceId"
                },
                {
                    "$ref": "#/parameters/tagId"
                }
            ],
            "delete": {
                "responses": {
                    "200": {
                        "$ref": "#/responses/record-deleted"
                    }
                },
                "summary": "Delete Tag",
                "parameters": [],
                "operationId": "delete-tag",
                "tags": [
                    "Tags"
                ]
            },
            "put": {
                "responses": {
                    "202": {
                        "$ref": "#/responses/record-saved"
                    }
                },
                "summary": "Update Tag",
                "operationId": "update-tag",
                "tags": [
                    "Tags"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/tag-input"
                        },
                        "x-examples": {
                            "application/json": {
                                "name": "qui proide",
                                "textColor": "#ffffff",
                                "backgroundColor": "#000000"
                            }
                        }
                    }
                ]
            }
        },
        "/services/{serviceId}/messages": {
            "post": {
                "responses": {
                    "202": {
                        "$ref": "#/responses/record-accepted"
                    }
                },
                "summary": "Send a message",
                "operationId": "send-message",
                "tags": [
                    "Messages"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/message-input"
                        },
                        "x-examples": {
                            "application/json": {
                                "recipients": [
                                    {
                                        "type": "conditions",
                                        "conditions": "eu ea officia elit"
                                    },
                                    {
                                        "type": "phone",
                                        "phoneNumber": "dolore fugiat veniam eiusmod et"
                                    }
                                ],
                                "body": "mollit adipisicing Excepteur",
                                "attachments": [
                                    {
                                        "content": "ea proident pariatur sit",
                                        "mimeType": "LPyIL5FCyf/b",
                                        "filename": "[w2,gE[&\\A.GO(I~T5yG7h"
                                    },
                                    {
                                        "content": "ex in",
                                        "mimeType": "nNv2xxReQMf/Bf4oeBNXoG",
                                        "filename": " u8..K3$1j"
                                    },
                                    {
                                        "content": "sit Ut enim",
                                        "mimeType": "X/Q1t38TQ0jcz",
                                        "filename": "t0)LI@.y^[Bdds2m5"
                                    },
                                    {
                                        "content": "ea veni",
                                        "mimeType": "Cp2GvVU4rx/Ff1NT",
                                        "filename": "6.W3t,RBYdc"
                                    },
                                    {
                                        "content": "deserunt Lorem q",
                                        "mimeType": "a0g/JX",
                                        "filename": "Hn\\$.9ix)"
                                    }
                                ],
                                "deduplicationId": "exercitation nulla",
                                "delaySeconds": 54830577.09783256,
                                "templateId": "dolor laborum est",
                                "sourceLanguage": "cillum consectetur ut",
                                "destinationLanguage": "deserunt"
                            }
                        }
                    }
                ],
                "security": []
            },
            "parameters": []
        },
        "/users/me": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/user-profile-input"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "avatarUrl": {
                                            "type": "string"
                                        }
                                    }
                                },
                                {
                                    "$ref": "#/definitions/object-id"
                                },
                                {
                                    "$ref": "#/definitions/timestamps"
                                }
                            ]
                        },
                        "examples": {
                            "application/json": {
                                "firstName": "Elias",
                                "lastName": "Smythe",
                                "hotsosLogin": null,
                                "title": "Supervisor",
                                "signature": "- ES",
                                "phone": null,
                                "email": "esmythe@zingleme.com",
                                "username": "esmythe@zingleme.com",
                                "avatarUrl": null,
                                "id": "3cc50f64-4c22-3d51-63a0-e572e98c31a5",
                                "createdAt": "1984-08-14T20:29:33.314Z",
                                "updatedAt": "1975-06-18T17:39:34.524Z"
                            }
                        }
                    }
                },
                "operationId": "get-user",
                "summary": "Get the current User",
                "tags": [
                    "Users"
                ]
            },
            "put": {
                "responses": {
                    "202": {
                        "$ref": "#/responses/record-saved"
                    }
                },
                "summary": "Update the current User",
                "operationId": "update-user",
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/user-profile-input"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "avatar": {
                                            "$ref": "#/definitions/attachment"
                                        }
                                    }
                                }
                            ]
                        },
                        "x-examples": {
                            "application/json": {
                                "firstName": "m",
                                "lastName": "",
                                "hotsosLogin": "dolo",
                                "title": "pariatur ",
                                "signature": "ad",
                                "phone": "sun",
                                "email": "cul",
                                "username": "e",
                                "avatar": {
                                    "content": "reprehenderit ven",
                                    "mimeType": "image/png",
                                    "filename": "`myavatar.png"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/services/{serviceId}/segments": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/segment"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "name": "eu sint e",
                                    "conditions": [
                                        {
                                            "method": "commodo irure et cillum",
                                            "source": "velit consectetur dolor",
                                            "value": "esse ad"
                                        },
                                        {
                                            "method": "et cupida",
                                            "source": "id dolor elit",
                                            "value": "qui magna"
                                        },
                                        {
                                            "method": "nulla sed",
                                            "source": "sit dolore cupidatat reprehenderit veniam",
                                            "value": "quis ut"
                                        },
                                        {
                                            "method": "reprehenderit ut do",
                                            "source": "enim sint nulla cupidata",
                                            "value": "nostrud"
                                        },
                                        {
                                            "method": "velit id",
                                            "source": "nisi occaecat officia ullamco",
                                            "value": "Lorem sunt officia"
                                        }
                                    ],
                                    "id": "3ad0a1bb-f54c-235e-49a0-efd36c177a0b",
                                    "backgroundColor": "dolor magna",
                                    "textColor": "in occaecat Lorem tempor anim",
                                    "createdAt": "2018-01-17T13:22:22.898Z",
                                    "updatedAt": "1984-03-15T02:01:20.855Z"
                                },
                                {
                                    "name": "Lorem",
                                    "conditions": [
                                        {
                                            "method": "culpa",
                                            "source": "proident",
                                            "value": "cupidatat deserunt laborum"
                                        },
                                        {
                                            "method": "ullamco laborum in enim",
                                            "source": "sint tempor non pariatur",
                                            "value": "aute labore"
                                        },
                                        {
                                            "method": "minim aliqua",
                                            "source": "occaecat est Excepteur",
                                            "value": "et laboris sit cupidatat"
                                        },
                                        {
                                            "method": "id culpa velit",
                                            "source": "ex id mollit non",
                                            "value": "est pariatur exercitation magna"
                                        }
                                    ],
                                    "id": "0fcc2a5d-1f9b-9689-e8f3-81a95aa237e6",
                                    "backgroundColor": "deserunt",
                                    "textColor": "esse occaecat Ut velit",
                                    "createdAt": "1953-06-02T21:21:31.790Z",
                                    "updatedAt": "1951-10-16T05:20:35.340Z"
                                },
                                {
                                    "name": "repreh",
                                    "conditions": [
                                        {
                                            "method": "quis culpa labore eu",
                                            "source": "ut cillum",
                                            "value": "in nisi adipisicing ut"
                                        },
                                        {
                                            "method": "ad sunt",
                                            "source": "minim ex nostrud in",
                                            "value": "incididunt nostrud deserunt dolore non"
                                        },
                                        {
                                            "method": "eiusmod fugiat",
                                            "source": "aliqui",
                                            "value": "Duis et deserunt"
                                        },
                                        {
                                            "method": "do nisi",
                                            "source": "in",
                                            "value": "dolore aute deserunt"
                                        },
                                        {
                                            "method": "sit",
                                            "source": "id minim dolor",
                                            "value": "sed proident"
                                        }
                                    ],
                                    "id": "5aa727ea-bcfe-5ad4-9425-a344788eb97c",
                                    "backgroundColor": "adipisicing Lorem es",
                                    "textColor": "pariatur sed amet in",
                                    "createdAt": "2009-04-16T06:25:35.712Z",
                                    "updatedAt": "1987-09-18T15:31:29.347Z"
                                }
                            ]
                        }
                    }
                },
                "summary": "List Segments",
                "tags": [
                    "Segments"
                ]
            },
            "parameters": [
                {
                    "name": "serviceId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ],
            "post": {
                "responses": {
                    "200": {
                        "$ref": "#/responses/record-saved"
                    }
                },
                "summary": "Create Segment",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/segment-input"
                        },
                        "x-examples": {
                            "application/json": {
                                "name": "ut",
                                "conditions": [
                                    {
                                        "method": "culp",
                                        "source": "incididunt in labore",
                                        "value": "reprehenderit velit"
                                    },
                                    {
                                        "method": "non",
                                        "source": "est consectetur ipsum sed",
                                        "value": "dolore veniam"
                                    },
                                    {
                                        "method": "velit eiusmod consequat",
                                        "source": "ut non dolore",
                                        "value": "quis"
                                    }
                                ],
                                "backgroundColor": "aliqua ullamco id ut",
                                "textColor": "labore Lorem quis"
                            }
                        }
                    }
                ],
                "tags": [
                    "Segments"
                ]
            }
        },
        "/services/{serviceId}/segments/{segmentId}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/segment"
                        },
                        "examples": {
                            "application/json": {
                                "name": "ulla",
                                "conditions": [
                                    {
                                        "comparisonMethod": "proident non et in",
                                        "comparisonSource": "adipisicing",
                                        "comparisonValue": "nostrud esse irure proident sint"
                                    },
                                    {
                                        "comparisonMethod": "qui aliquip aute",
                                        "comparisonSource": "sint non deserunt",
                                        "comparisonValue": "adipisicing reprehenderit aliqua occaecat"
                                    },
                                    {
                                        "comparisonMethod": "sit nostrud",
                                        "comparisonSource": "aliqua esse",
                                        "comparisonValue": "id pariatur"
                                    },
                                    {
                                        "comparisonMethod": "voluptate commodo culpa aliqua sunt",
                                        "comparisonSource": "in ex veniam Duis",
                                        "comparisonValue": "reprehenderit"
                                    }
                                ],
                                "id": "7b0719ab-b942-6c7d-6607-409461bb59b6",
                                "backgroundColor": "commodo et ipsum dolore",
                                "textColor": "consequat deserunt",
                                "createdAt": "1984-08-15T07:54:21.811Z",
                                "updatedAt": "2012-03-04T08:03:02.733Z"
                            }
                        }
                    }
                },
                "summary": "Get Segment",
                "operationId": "get-segment",
                "tags": [
                    "Segments"
                ]
            },
            "parameters": [
                {
                    "name": "serviceId",
                    "in": "path",
                    "type": "string",
                    "required": true
                },
                {
                    "name": "segmentId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ],
            "put": {
                "responses": {
                    "200": {
                        "$ref": "#/responses/record-saved"
                    }
                },
                "summary": "Update Segment",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/segment-input"
                        },
                        "x-examples": {
                            "application/json": {
                                "name": "ut",
                                "conditions": [
                                    {
                                        "comparisonMethod": "irure Lorem est",
                                        "comparisonSource": "proident id fugiat",
                                        "comparisonValue": "ut amet"
                                    }
                                ],
                                "backgroundColor": "ad minim dolor",
                                "textColor": "fugiat qui dolore"
                            }
                        }
                    }
                ],
                "tags": [
                    "Segments"
                ]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Delete Segment"
            }
        },
        "/services/{serviceId}/contacts/ref/{externalContactId}": {
            "get": {
                "responses": {
                    "307": {
                        "$ref": "#/responses/see-other"
                    }
                },
                "summary": "Get Contact by customer-defined ID",
                "operationId": "get-contact-by-external",
                "tags": [
                    "Contacts"
                ]
            },
            "parameters": [
                {
                    "name": "serviceId",
                    "in": "path",
                    "type": "string",
                    "required": true
                },
                {
                    "name": "externalContactId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ],
            "put": {
                "responses": {
                    "307": {
                        "$ref": "#/responses/see-other"
                    }
                },
                "summary": "Update Contact by customer-defined ID",
                "operationId": "update-contact-by-external",
                "tags": [
                    "Contacts"
                ]
            },
            "delete": {
                "responses": {
                    "307": {
                        "$ref": "#/responses/see-other"
                    }
                },
                "summary": "Delete Contact by customer-defined ID",
                "operationId": "delete-contact-by-external",
                "tags": [
                    "Contacts"
                ]
            }
        },
        "/services/{serviceId}/contacts/{contactId}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object-id"
                                },
                                {
                                    "$ref": "#/definitions/contact-input"
                                },
                                {
                                    "$ref": "#/definitions/timestamps"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "avatarUrl": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        },
                        "examples": {
                            "application/json": {
                                "firstName": "Cindy",
                                "lastName": "Smith",
                                "title": "Ms.",
                                "tags": [
                                    "Checked In",
                                    "VIP"
                                ],
                                "channels": [
                                    {
                                        "type": "phone_number",
                                        "value": "+14065559898",
                                        "isActive": true
                                    }
                                ],
                                "externalId": "a09sd80a9sd809a8sd098asd",
                                "conversationProperties": {
                                    "isClosed": true,
                                    "isUnread": false,
                                    "assignedToUserId": null,
                                    "assignedToTeamId": null
                                },
                                "notes": "This is a very nice person",
                                "avatar": null,
                                "contactFields": [
                                    {
                                        "contactFieldName": "Checkin Date",
                                        "value": "2018-08-30"
                                    },
                                    {
                                        "contactFieldName": "Room Number",
                                        "value": 200
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Get Contact",
                "tags": [
                    "Contacts"
                ],
                "operationId": "get-contact"
            },
            "parameters": [
                {
                    "name": "serviceId",
                    "in": "path",
                    "type": "string",
                    "required": true
                },
                {
                    "name": "contactId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ],
            "put": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Update Contact",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/contact-input"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "avatar": {
                                            "$ref": "#/definitions/attachment"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Delete Contact"
            }
        },
        "/services/{serviceId}/contacts": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/object-id"
                                    },
                                    {
                                        "$ref": "#/definitions/contact-input"
                                    },
                                    {
                                        "$ref": "#/definitions/timestamps"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "avatarUrl": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "firstName": "Cindy",
                                    "lastName": "Smith",
                                    "title": "Ms.",
                                    "tags": [
                                        "Checked In",
                                        "VIP"
                                    ],
                                    "channels": [
                                        {
                                            "type": "phone_number",
                                            "value": "+14065559898",
                                            "isActive": true
                                        }
                                    ],
                                    "externalId": "a09sd80a9sd809a8sd098asd",
                                    "conversationProperties": {
                                        "isClosed": true,
                                        "isUnread": false,
                                        "assignedToUserId": null,
                                        "assignedToTeamId": null
                                    },
                                    "notes": "This is a very nice person",
                                    "avatar": null,
                                    "contactFields": [
                                        {
                                            "contactFieldName": "Checkin Date",
                                            "value": "2018-09-03"
                                        },
                                        {
                                            "contactFieldName": "Room Number",
                                            "value": 220
                                        }
                                    ]
                                },
                                {
                                    "firstName": "Bob",
                                    "lastName": "Williams",
                                    "title": "Mr.",
                                    "tags": [
                                        "VIP"
                                    ],
                                    "channels": [
                                        {
                                            "type": "phone_number",
                                            "value": "+18585551212",
                                            "isActive": true
                                        }
                                    ],
                                    "externalId": null,
                                    "conversationProperties": {
                                        "isClosed": true,
                                        "isUnread": false,
                                        "assignedToUserId": null,
                                        "assignedToTeamId": null
                                    },
                                    "notes": null,
                                    "avatar": null,
                                    "contactFields": []
                                }
                            ]
                        }
                    }
                },
                "summary": "List Contacts",
                "tags": [
                    "Contacts"
                ],
                "operationId": "list-contacts",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {}
                    },
                    {
                        "$ref": "#/parameters/mentions"
                    }
                ]
            },
            "parameters": [
                {
                    "name": "serviceId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ],
            "post": {
                "responses": {
                    "200": {
                        "$ref": "#/responses/record-saved"
                    }
                },
                "summary": "Create Contact",
                "operationId": "create-contact",
                "tags": [
                    "Contacts"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/contact-input"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "avatar": {
                                            "$ref": "#/definitions/attachment"
                                        }
                                    }
                                }
                            ]
                        },
                        "x-examples": {
                            "application/json": {
                                "firstName": "Cindy",
                                "lastName": "Smith",
                                "title": "Ms.",
                                "tags": [
                                    "Checked In",
                                    "VIP"
                                ],
                                "channels": [
                                    {
                                        "type": "phone_number",
                                        "value": "+14065559898",
                                        "isActive": true
                                    }
                                ],
                                "externalId": "a09sd80a9sd809a8sd098asd",
                                "conversationProperties": {
                                    "isClosed": true,
                                    "isUnread": false,
                                    "assignedToUserId": null,
                                    "assignedToTeamId": null
                                },
                                "notes": "This is a very nice person",
                                "avatar": null,
                                "contactFields": [
                                    {
                                        "contactFieldName": "Checkin Date",
                                        "value": "2018-08-30"
                                    },
                                    {
                                        "contactFieldName": "Room Number",
                                        "value": 200
                                    }
                                ]
                            }
                        },
                        "description": "One of the following is required:\n\n* firstName\n* lastName\n* externalId\n* at least one channel object\n* at least one contactFields object"
                    }
                ]
            }
        },
        "/services/{serviceId}/messages/{messageId}/categories/{messageCategoryId}": {
            "post": {
                "responses": {
                    "202": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Apply message category",
                "operationId": "apply-message-category",
                "tags": [
                    "Messages"
                ]
            },
            "parameters": [
                {
                    "name": "serviceId",
                    "in": "path",
                    "type": "string",
                    "required": true
                },
                {
                    "name": "messageId",
                    "in": "path",
                    "type": "string",
                    "required": true
                },
                {
                    "name": "messageCategoryId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ],
            "delete": {
                "responses": {
                    "202": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Remove message category",
                "operationId": "remove-message-category",
                "tags": [
                    "Messages"
                ]
            }
        },
        "/services/{serviceId}/message-categories": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/message-category"
                                    }
                                ]
                            }
                        },
                        "examples": {
                            "application/json": []
                        }
                    }
                },
                "summary": "List Message Categories",
                "operationId": "list-message-categories",
                "tags": [
                    "Message Categories"
                ]
            },
            "parameters": [
                {
                    "name": "serviceId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ],
            "post": {
                "responses": {
                    "201": {
                        "$ref": "#/responses/record-saved"
                    }
                },
                "summary": "Create Message Category",
                "operationId": "create-message-category",
                "tags": [
                    "Message Categories"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/message-category-input"
                        },
                        "x-examples": {
                            "application/json": {
                                "name": "anim con"
                            }
                        }
                    }
                ]
            }
        },
        "/services/{serviceId}/message-categories/{messageCategoryId}": {
            "parameters": [
                {
                    "name": "serviceId",
                    "in": "path",
                    "type": "string",
                    "required": true
                },
                {
                    "name": "messageCategoryId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ],
            "get": {
                "summary": "Get Message Category",
                "operationId": "get-message-category",
                "tags": [
                    "Message Categories"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/message-category"
                        },
                        "examples": {
                            "application/json": {
                                "id": "6075706b-46ca-98d7-104f-e978d009d133",
                                "name": "culpa",
                                "createdAt": "2014-04-02T19:56:46.008Z",
                                "updatedAt": "1964-02-07T14:01:54.035Z"
                            }
                        }
                    }
                }
            },
            "put": {
                "responses": {
                    "202": {
                        "$ref": "#/responses/record-saved"
                    }
                },
                "summary": "Update Message Category",
                "operationId": "update-message-category",
                "tags": [
                    "Message Categories"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/message-category-input"
                        },
                        "x-examples": {
                            "application/json": {
                                "name": "volupta"
                            }
                        }
                    }
                ]
            },
            "delete": {
                "responses": {
                    "204": {
                        "$ref": "#/responses/record-deleted"
                    }
                },
                "summary": "Delete Message Category",
                "operationId": "delete-message-category",
                "tags": [
                    "Message Categories"
                ]
            }
        },
        "/services/{serviceId}/messages/{messageId}/categories": {
            "put": {
                "responses": {
                    "202": {
                        "$ref": "#/responses/record-saved"
                    }
                },
                "summary": "Set message categories",
                "operationId": "set-message-categories",
                "tags": [
                    "Messages"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "array",
                            "description": "Array of category names to set on the message.  All other categories will be ",
                            "items": {
                                "type": "string"
                            }
                        },
                        "x-examples": {
                            "application/json": [
                                "Housekeeping",
                                "VIP",
                                "Revenue"
                            ]
                        }
                    }
                ]
            },
            "parameters": [
                {
                    "name": "serviceId",
                    "in": "path",
                    "type": "string",
                    "required": true
                },
                {
                    "name": "messageId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ]
        },
        "/analytics/service-group": {
            "post": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "service_group_id": {
                                    "type": "string",
                                    "pattern": "^[a-f\\d]{8}\\-[a-f\\d]{4}\\-[a-f\\d]{4}\\-[a-f\\d]{4}\\-[a-f\\d]{12}"
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "service_group_id": "5543a5d4-5d0a-e598-43df-5fb4953f588f"
                            }
                        }
                    }
                },
                "summary": "Build a group of services from an array of collection properties",
                "operationId": "build-service-group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "collection_id": {
                                    "type": "string",
                                    "pattern": "^[a-f\\d]{8}\\-[a-f\\d]{4}\\-[a-f\\d]{4}\\-[a-f\\d]{4}\\-[a-f\\d]{12}"
                                },
                                "filters": {
                                    "type": [
                                        "string",
                                        "array"
                                    ],
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "field_id": {
                                                "type": "string",
                                                "pattern": "^[a-f\\d]{8}\\-[a-f\\d]{4}\\-[a-f\\d]{4}\\-[a-f\\d]{4}\\-[a-f\\d]{12}"
                                            },
                                            "values": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "x-examples": {
                            "application/json": {
                                "collection_id": "5e2371d3-b1d6-ae19-733f-c8eb2887c43a",
                                "filters": [
                                    {
                                        "field_id": "3e1d1a56-4792-3ffd-58ed-580bbc5540f1",
                                        "values": [
                                            "select",
                                            "premium"
                                        ]
                                    },
                                    {
                                        "field_id": "435e4c67-b400-853e-857e-d8590dc7da9b",
                                        "values": [
                                            "west"
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                ],
                "tags": [
                    "Analytics"
                ],
                "x-private": true
            }
        },
        "/services/{serviceId}/integrations": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "code": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "code": "springer",
                                    "name": "Springer",
                                    "status": "connected"
                                },
                                {
                                    "code": "opera",
                                    "name": "Opera",
                                    "status": "connected"
                                },
                                {
                                    "code": "zapier",
                                    "name": "Zapier",
                                    "status": "connected"
                                },
                                {
                                    "code": "hotsos",
                                    "name": "HotSOS",
                                    "status": "connected"
                                },
                                {
                                    "code": "bitly",
                                    "name": "Bitly",
                                    "status": "connected"
                                },
                                {
                                    "code": "email",
                                    "name": "Email",
                                    "status": "needs_attention"
                                },
                                {
                                    "code": "sftp",
                                    "name": "SFTP",
                                    "status": "needs_attention"
                                },
                                {
                                    "code": "mindbody",
                                    "name": "MindBody",
                                    "status": "disconnected"
                                },
                                {
                                    "code": "tripadvisor",
                                    "name": "TripAdvisor",
                                    "status": "connected"
                                }
                            ]
                        }
                    }
                },
                "summary": "Get a list of all integrations for a service",
                "operationId": "get-integration",
                "tags": [
                    "Integrations"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/integration"
                            }
                        },
                        "x-examples": {
                            "application/json": [
                                {
                                    "auth_token": "ipsum nisi",
                                    "mapping_configuration": {
                                        "begin_at_row": 92521440.35822311,
                                        "mapping_configuration": {},
                                        "last_received_at": "1995-01-21T09:10:12.425Z",
                                        "sample_data": {
                                            "headers": [
                                                "occaecat sint",
                                                "fugiat veniam qui laborum",
                                                "irure et"
                                            ],
                                            "rows": [
                                                {},
                                                {},
                                                {}
                                            ]
                                        },
                                        "status": "awaiting_configuration"
                                    },
                                    "name": "deserunt Duis eiusmod Except",
                                    "code": "dolore consectetu",
                                    "requires_auth_token": "veniam",
                                    "status": "quis in sunt",
                                    "configuration": [
                                        {
                                            "code": "aliquip et Excepteur",
                                            "value": "ullamco adipisicing eu m",
                                            "field_type": "non sint sunt",
                                            "name": "et ex consectetur tempor"
                                        },
                                        {
                                            "code": "nulla culpa",
                                            "value": "cillum dolore magna",
                                            "field_type": "eu",
                                            "name": "aliqua veniam officia aute ad"
                                        },
                                        {
                                            "code": "sit in",
                                            "value": "id",
                                            "field_type": "dolore",
                                            "name": "ad"
                                        },
                                        {
                                            "code": "in deserunt",
                                            "value": "consectetur in",
                                            "field_type": "laboris Lorem esse quis deserunt",
                                            "name": "dolore ame"
                                        },
                                        {
                                            "code": "esse incididunt in",
                                            "value": "cupidatat",
                                            "field_type": "culpa magna",
                                            "name": "officia cupidatat"
                                        }
                                    ]
                                },
                                {
                                    "auth_token": "nulla Ut",
                                    "mapping_configuration": {
                                        "begin_at_row": 76108369.96022585,
                                        "mapping_configuration": {},
                                        "last_received_at": "1953-06-29T01:20:52.409Z",
                                        "sample_data": {
                                            "headers": [
                                                "Duis sint",
                                                "Duis ea",
                                                "anim",
                                                "tempor"
                                            ],
                                            "rows": [
                                                {},
                                                {}
                                            ]
                                        },
                                        "status": "awaiting_configuration"
                                    },
                                    "name": "aliquip culpa eu laboris",
                                    "code": "laborum",
                                    "requires_auth_token": "ipsum fugiat",
                                    "status": "laboris magna quis dolor",
                                    "configuration": [
                                        {
                                            "code": "esse deserunt",
                                            "value": "elit ipsum amet",
                                            "field_type": "laboris ut mollit",
                                            "name": "enim exercitation minim elit"
                                        },
                                        {
                                            "code": "ad",
                                            "value": "do aliquip tempor anim",
                                            "field_type": "anim",
                                            "name": "culpa cillum con"
                                        },
                                        {
                                            "code": "cupidatat",
                                            "value": "nisi tempor",
                                            "field_type": "ut",
                                            "name": "ut ad repr"
                                        },
                                        {
                                            "code": "officia culpa Lorem sed laborum",
                                            "value": "Ut non nisi sed",
                                            "field_type": "labore anim et consequat",
                                            "name": "reprehenderit magna Duis voluptate in"
                                        },
                                        {
                                            "code": "et",
                                            "value": "in Lorem dolor magna",
                                            "field_type": "aliqua",
                                            "name": "qui in"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            },
            "parameters": [
                {
                    "name": "serviceId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ]
        },
        "/services/{serviceId}/integrations/{integration}": {
            "post": {
                "responses": {
                    "204": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Enable an integration for a service",
                "operationId": "enable-integration",
                "tags": [
                    "Integrations"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "auth_token": {
                                    "type": "string"
                                }
                            }
                        },
                        "x-examples": {
                            "application/json": {
                                "auth_token": "as0d9as09d8as908d"
                            }
                        }
                    }
                ]
            },
            "parameters": [
                {
                    "name": "serviceId",
                    "in": "path",
                    "type": "string",
                    "required": true
                },
                {
                    "name": "integration",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ],
            "put": {
                "responses": {
                    "202": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Update an integration",
                "tags": [
                    "Integrations"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "configuration": {
                                        "type": "object",
                                        "properties": {
                                            "": {
                                                "type": "object"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "x-examples": {
                            "application/json": {
                                "configuration": {
                                    "hotsos_url": {
                                        "value": "ifc.na3.hot-sos.net"
                                    },
                                    "hotsos_username": {
                                        "value": "ZINGLE_290511"
                                    },
                                    "hotsos_password": {
                                        "value": "2905ZINGLE"
                                    },
                                    "hotsos_checkin_message": {
                                        "value": "welcome222!"
                                    },
                                    "hotsos_checkout_message": {
                                        "value": null
                                    },
                                    "hotsos_fetch_enabled": {
                                        "value": false
                                    },
                                    "hotsos_order_update_enabled": {
                                        "value": false
                                    },
                                    "hotsos_room_sync_enabled": {
                                        "value": false
                                    }
                                }
                            }
                        }
                    }
                ]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        },
                        "examples": {
                            "application/json": {}
                        }
                    }
                },
                "summary": "Disable an integration",
                "operationId": "disable-integration",
                "tags": [
                    "Integrations"
                ],
                "description": "Disables an integration, deletes all integration config values, removes an integration-related auth tokens"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/integration"
                        },
                        "examples": {
                            "application/json": {
                                "code": "springer",
                                "name": "Springer",
                                "status": "connected",
                                "field_mapping": {
                                    "begin_at_row": 1,
                                    "last_received_at": null,
                                    "status": "awaiting_receipt",
                                    "column_field_mapping": null,
                                    "sample_data": null
                                },
                                "configuration": {
                                    "username": {
                                        "code": "username",
                                        "name": "Username",
                                        "field_type": "username",
                                        "value": "import_5c42dfdd992e4_1"
                                    },
                                    "password": {
                                        "code": "password",
                                        "name": "Password",
                                        "field_type": "password",
                                        "value": "oacazoahospiacha"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Get a single integration",
                "operationId": "get-integration",
                "tags": [
                    "Integrations"
                ]
            }
        },
        "/services/{serviceId}/integrations/{integration}/field-mapping": {
            "parameters": [
                {
                    "name": "serviceId",
                    "in": "path",
                    "type": "string",
                    "required": true
                },
                {
                    "name": "integration",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ],
            "put": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Create or update a field mapping for an integration",
                "operationId": "update-field-mapping",
                "tags": [
                    "Integrations"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/integration-field-mapping-input"
                        },
                        "x-examples": {
                            "application/json": {
                                "begin_at_row": -41600436.55765091,
                                "column_field_mapping": {}
                            }
                        }
                    }
                ]
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Delete a field mapping for an integration",
                "tags": [
                    "Integrations"
                ],
                "operationId": "delete-field-mapping"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Get the field mapping for an integration",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/integration-field-mapping"
                        },
                        "x-examples": {
                            "application/json": {
                                "begin_at_row": -65064498.88114685,
                                "mapping_configuration": {},
                                "last_received_at": "1959-04-02T20:49:53.419Z",
                                "sample_data": {
                                    "headers": [
                                        "in et Excepteur",
                                        "consequat do aliquip nisi dolor"
                                    ],
                                    "rows": [
                                        {},
                                        {},
                                        {},
                                        {}
                                    ]
                                },
                                "status": "awaiting_configuration"
                            }
                        }
                    }
                ]
            }
        },
        "/services/{serviceId}/integrations/mindbody/activation-link": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "link": {
                                    "type": "string"
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "link": "https://mindbodyonline.com/foo/bar"
                            }
                        }
                    }
                },
                "summary": "Generate an activation link for MindBody",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Integrations"
                ],
                "operationId": "get-mindbody-activation-link",
                "consumes": [
                    "application/json"
                ]
            },
            "parameters": [
                {
                    "name": "serviceId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ]
        },
        "/services/{serviceId}/webhooks": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/webhook"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "id": "2d338bc5-16a3-9eff-9b52-5f01cfdae265",
                                    "url": "https://Hv",
                                    "headers": [
                                        {
                                            "key": "eiusmod",
                                            "value": "in commodo ipsum esse"
                                        },
                                        {
                                            "key": "voluptate",
                                            "value": "ex"
                                        }
                                    ],
                                    "events": [
                                        "et el",
                                        "veniam laboris eiusmod do",
                                        "id"
                                    ],
                                    "enabled": true
                                },
                                {
                                    "id": "cfdbad62-52ff-89ba-6da1-48121dbebde6",
                                    "url": "https://dl",
                                    "headers": [
                                        {
                                            "key": "Ut commodo veniam",
                                            "value": "occaecat eiusmod ut"
                                        },
                                        {
                                            "key": "qui anim ut ad velit",
                                            "value": "nisi Duis incididunt fugiat do"
                                        }
                                    ],
                                    "events": [
                                        "laboris velit",
                                        "incididunt voluptate nisi e",
                                        "enim consequat",
                                        "proident",
                                        "Excepteur ipsum culpa dolore"
                                    ],
                                    "enabled": true
                                },
                                {
                                    "id": "d1359016-5b9f-3076-349b-5e520392019e",
                                    "url": "http://gKh",
                                    "headers": [
                                        {
                                            "key": "veniam et",
                                            "value": "adi"
                                        },
                                        {
                                            "key": "in elit ut enim pariatur",
                                            "value": "ea do"
                                        }
                                    ],
                                    "events": [
                                        "exercitation",
                                        "enim magna dolor nisi culpa",
                                        "d",
                                        "ullamco",
                                        "ipsum"
                                    ],
                                    "enabled": false
                                }
                            ]
                        }
                    }
                },
                "summary": "List Webhooks",
                "operationId": "list-webhooks",
                "tags": [
                    "Webhooks"
                ]
            },
            "parameters": [
                {
                    "name": "serviceId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ],
            "post": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Create a Webhook",
                "operationId": "create-webhook",
                "tags": [
                    "Webhooks"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/webhook-input"
                        },
                        "x-examples": {
                            "application/json": {
                                "url": "https://ks",
                                "headers": [
                                    {
                                        "key": "laboris in enim consequat mollit",
                                        "value": "aliqua sed enim culpa occaecat"
                                    },
                                    {
                                        "key": "sed ea in ipsum",
                                        "value": "proident reprehenderit dolore"
                                    },
                                    {
                                        "key": "elit sit",
                                        "value": "incid"
                                    },
                                    {
                                        "key": "occaecat fugiat exercitation laboris",
                                        "value": "aute laborum dolore dolore aliquip"
                                    },
                                    {
                                        "key": "id",
                                        "value": "enim pariatur eiusm"
                                    }
                                ],
                                "events": [
                                    "veniam Lorem"
                                ],
                                "enabled": true
                            }
                        }
                    }
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/webhook-input"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "url": "https://ZJ",
                                    "headers": [
                                        {
                                            "key": "reprehenderit officia sunt enim",
                                            "value": "do dolor ut ipsum"
                                        },
                                        {
                                            "key": "in Ut ex exercitation irure",
                                            "value": "ut non veniam"
                                        },
                                        {
                                            "key": "anim qui proident dolor laborum",
                                            "value": "ipsum"
                                        }
                                    ],
                                    "events": [
                                        "sint occaecat",
                                        "qui",
                                        "commodo",
                                        "culpa cupidatat anim id",
                                        "dolor"
                                    ],
                                    "enabled": true
                                },
                                {
                                    "url": "https://vF",
                                    "headers": [
                                        {
                                            "key": "minim dolore dolore adipisicing",
                                            "value": "anim veniam nulla proident"
                                        },
                                        {
                                            "key": "exercitation ea occaecat",
                                            "value": "dolore"
                                        },
                                        {
                                            "key": "dolore Lorem irure",
                                            "value": "proident ullamco minim tempo"
                                        },
                                        {
                                            "key": "proident dolore elit",
                                            "value": "tempor amet aliquip"
                                        }
                                    ],
                                    "events": [
                                        "sint commodo ut elit Excepteur"
                                    ],
                                    "enabled": false
                                },
                                {
                                    "url": "https://DG",
                                    "headers": [
                                        {
                                            "key": "elit",
                                            "value": "aute dolore culpa en"
                                        },
                                        {
                                            "key": "tempor veniam",
                                            "value": "l"
                                        },
                                        {
                                            "key": "est tempor labore",
                                            "value": "deserunt Lorem reprehenderit"
                                        },
                                        {
                                            "key": "eu aliqua nostrud ex",
                                            "value": "dolore consectetur ipsum sed"
                                        },
                                        {
                                            "key": "minim dolor occaecat",
                                            "value": "Excepteur"
                                        }
                                    ],
                                    "events": [
                                        "aliqua in deserunt",
                                        "elit dolore deserunt cillum occaecat",
                                        "in in laborum aute",
                                        "cillum cupidatat"
                                    ],
                                    "enabled": true
                                },
                                {
                                    "url": "https://iD",
                                    "headers": [
                                        {
                                            "key": "Excepteur",
                                            "value": "voluptate cupidatat ipsum"
                                        },
                                        {
                                            "key": "irure ut",
                                            "value": "consequat"
                                        },
                                        {
                                            "key": "labor",
                                            "value": "ut"
                                        },
                                        {
                                            "key": "dolor Lorem velit",
                                            "value": "reprehenderit"
                                        }
                                    ],
                                    "events": [
                                        "dolor irure aute sed"
                                    ],
                                    "enabled": false
                                },
                                {
                                    "url": "http://nwl",
                                    "headers": [
                                        {
                                            "key": "Lorem eu in",
                                            "value": "exercitation aliquip cillum dolor est"
                                        }
                                    ],
                                    "events": [
                                        "amet eu sint",
                                        "dolor minim dolore mollit in",
                                        "do officia",
                                        "exercitation ex pariatur"
                                    ],
                                    "enabled": false
                                }
                            ]
                        }
                    }
                },
                "summary": "Update All Webhooks",
                "operationId": "update-webhooks",
                "tags": [
                    "Webhooks"
                ],
                "description": "Sets "
            }
        },
        "/services/{serviceId}/webhooks/{webhookId}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/webhook"
                        },
                        "examples": {
                            "application/json": {
                                "id": "e13a4a69-df8b-a2bb-c59a-c16244b35560",
                                "url": "http://AFG",
                                "headers": [
                                    {
                                        "key": "id aliqua cillum dolor",
                                        "value": "ullamco consequat est"
                                    }
                                ],
                                "events": [
                                    "aliqu"
                                ],
                                "enabled": true
                            }
                        }
                    }
                },
                "summary": "Get a webhook",
                "operationId": "get-webhook",
                "tags": [
                    "Webhooks"
                ]
            },
            "parameters": [
                {
                    "name": "serviceId",
                    "in": "path",
                    "type": "string",
                    "required": true
                },
                {
                    "name": "webhookId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ],
            "post": {
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Create a Webhook",
                "operationId": "create-webhook",
                "tags": [
                    "Webhooks"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/webhook-input"
                        },
                        "x-examples": {
                            "application/json": {
                                "url": "http://NWk",
                                "headers": [
                                    {
                                        "key": "elit",
                                        "value": "cupidatat labore"
                                    },
                                    {
                                        "key": "qui",
                                        "value": "esse ex"
                                    },
                                    {
                                        "key": "proident eu laboris non amet",
                                        "value": "elit nostrud Lorem qui commodo"
                                    },
                                    {
                                        "key": "ex",
                                        "value": "labore in"
                                    },
                                    {
                                        "key": "sed non ad velit",
                                        "value": "id"
                                    }
                                ],
                                "events": [
                                    "ea ut deserunt labore enim",
                                    "sit id laborum fugiat",
                                    "nisi",
                                    "magna ad reprehen"
                                ],
                                "enabled": false
                            }
                        }
                    }
                ]
            },
            "delete": {
                "responses": {
                    "202": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Delete a Webhook",
                "operationId": "delete-webhook",
                "tags": [
                    "Webhooks"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Update a Webhook",
                "operationId": "update-webhook",
                "tags": [
                    "Webhooks"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/webhook-input"
                        },
                        "x-examples": {
                            "application/json": {
                                "url": "https://sx",
                                "headers": [
                                    {
                                        "key": "nisi eiusm",
                                        "value": "aliqua eu eiusmod sit pariatur"
                                    }
                                ],
                                "events": [
                                    "Excepteur ex",
                                    "laborum ea sunt Duis proident",
                                    "ut commodo in occaecat id",
                                    "dolore incididunt Ut nisi"
                                ],
                                "enabled": true
                            }
                        }
                    }
                ]
            }
        },
        "/service-collections": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service-collection"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "id": "d3c3c51f-0572-44df-a146-b9c38cc7cc66",
                                    "name": "Hotel California Grp.",
                                    "description": null,
                                    "fields": [
                                        {
                                            "id": "1b4a7b4d-9053-4d2e-be19-c7411bde50a8",
                                            "name": "Region",
                                            "values": [
                                                "East",
                                                "West"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "summary": "List Service Collections for user",
                "operationId": "list-user-service-collections",
                "tags": [
                    "Service Collections"
                ],
                "description": "Lists all service collections that a current user has access to through their Service roles",
                "parameters": [
                    {
                        "in": "query",
                        "name": "service_id",
                        "type": "string",
                        "description": "\tOnly return collections containing the specified service"
                    }
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        },
                        "headers": {
                            "Location": {
                                "type": "string",
                                "description": "URL to access the service collection"
                            }
                        }
                    }
                },
                "summary": "Create a Service Collection",
                "operationId": "create-service-collection",
                "tags": [
                    "Service Collections"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/service-collection-input"
                        },
                        "x-examples": {
                            "application/json": {
                                "name": "Hotel Brand A",
                                "description": "Service collection for Bob Nacho ownership group A"
                            }
                        }
                    }
                ],
                "x-private": true
            }
        },
        "/service-collections/all": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service-collection"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "id": "d3c3c51f-0572-44df-a146-b9c38cc7cc66",
                                    "name": "Hotel California Grp.",
                                    "description": null,
                                    "fields": [
                                        {
                                            "id": "1b4a7b4d-9053-4d2e-be19-c7411bde50a8",
                                            "name": "Region",
                                            "values": [
                                                "East",
                                                "West"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "operationId": "list-service-collections",
                "tags": [
                    "Service Collections"
                ],
                "description": "List all service collections",
                "summary": "List all Service Collections",
                "x-private": true
            }
        },
        "/service-collections/{serviceCollectionId}/services": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service-collection-service"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "id": "urn:uuid:b1fb5287-a18f-e912-d902-2f29d8d43784",
                                    "name": "commodo cillum",
                                    "field_values": {
                                        "field_values": [
                                            {
                                                "field_id": "35e18d4b-a706-fcd7-62f3-17f38e0ce301",
                                                "value": "sit"
                                            },
                                            {
                                                "field_id": "urn:uuid:5bc8bf7d-8020-0725-e206-baf3120b8af2",
                                                "value": "dolore laborum aliquip exercitation eiusmod"
                                            },
                                            {
                                                "field_id": "urn:uuid:6e342ad0-ccc4-cb51-6b24-a81547a08e1c",
                                                "value": "deserunt non cillum laborum"
                                            }
                                        ],
                                        "field_name": "incididunt in cupidatat"
                                    }
                                },
                                {
                                    "id": "f5505cb6-23fe-6929-2422-a5b4766280f1",
                                    "name": "pariatur cillum laboris minim aliqua",
                                    "field_values": {
                                        "field_values": [
                                            {
                                                "field_id": "0152b720-74d9-888c-0e1e-5d02d3f0d4eb",
                                                "value": "amet"
                                            },
                                            {
                                                "field_id": "6505d400-9964-53eb-13bc-a0d73fbbf4db",
                                                "value": "sunt et magna"
                                            }
                                        ],
                                        "field_name": "consectetur sit proident"
                                    }
                                }
                            ]
                        }
                    }
                },
                "summary": "List Service Collection Services",
                "operationId": "list-service-collection-services",
                "tags": [
                    "Service Collections"
                ]
            },
            "parameters": [
                {
                    "name": "serviceCollectionId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ]
        },
        "/service-collections/{serviceCollectionId}/services/{serviceId}": {
            "post": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/service-collection-service-input"
                        },
                        "examples": {
                            "application/json": {
                                "field_values": [
                                    {
                                        "field_id": "urn:uuid:fa73dc0e-63b1-fa3f-2031-4bede189e0d8",
                                        "value": "amet nostru"
                                    },
                                    {
                                        "field_id": "urn:uuid:703b30df-d5d2-cb05-c3db-d09dcfdc8571",
                                        "value": "eu in ad dolor"
                                    }
                                ]
                            }
                        }
                    }
                },
                "operationId": "add-service-to-service-collection",
                "tags": [
                    "Service Collections"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/service-collection-service-input"
                        },
                        "x-examples": {
                            "application/json": {
                                "field_values": [
                                    {
                                        "field_id": "6895d0de-c75b-b674-4188-fc9e8f4d9fbc",
                                        "value": "reprehenderit sed aute ullamco"
                                    },
                                    {
                                        "field_id": "6d197694-f5a7-f3af-7d17-9bdc82a4580a",
                                        "value": "adipisicing anim ipsum"
                                    },
                                    {
                                        "field_id": "urn:uuid:cfcad54d-dfb0-e238-8a80-0bb1dc54b4f4",
                                        "value": "in id"
                                    },
                                    {
                                        "field_id": "urn:uuid:90f9ed02-a9bb-31a9-d99e-1a9b34410832",
                                        "value": "aute aliquip do consectetur Duis"
                                    },
                                    {
                                        "field_id": "urn:uuid:b351c2ab-43bb-90c3-33e0-b6e053824611",
                                        "value": "ea nulla"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "summary": "Add service to service collection",
                "x-private": true
            },
            "parameters": [
                {
                    "name": "serviceCollectionId",
                    "in": "path",
                    "type": "string",
                    "required": true
                },
                {
                    "name": "serviceId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ],
            "put": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Update service for service collection",
                "operationId": "update-service-for-service-collection",
                "tags": [
                    "Service Collections"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/service-collection-service-input"
                        },
                        "x-examples": {
                            "application/json": {
                                "field_values": [
                                    {
                                        "field_id": "urn:uuid:273387b6-d588-382c-e31a-403021e3d2d7",
                                        "value": "consectetur"
                                    },
                                    {
                                        "field_id": "urn:uuid:80b815a0-245f-7123-58f8-c70d2782f6e8",
                                        "value": "occaecat eiusmod et Ut"
                                    },
                                    {
                                        "field_id": "urn:uuid:1bd8f243-00fb-0fdc-71ac-667543005c1d",
                                        "value": "pariatur"
                                    },
                                    {
                                        "field_id": "urn:uuid:8993249b-b4bb-d821-a5e1-9c2864204f93",
                                        "value": "eiusmod"
                                    },
                                    {
                                        "field_id": "8e09842f-3b0e-5242-d8f9-92bbe040ad2e",
                                        "value": "eiusmod esse irure amet"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "x-private": true
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Remove service from service collection",
                "operationId": "remove-service-from-service-collection",
                "tags": [
                    "Service Collections"
                ],
                "x-private": true
            }
        },
        "/service-collections/{serviceCollectionId}/fields": {
            "post": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Create Service Collection Field",
                "operationId": "create-service-collection-field",
                "tags": [
                    "Service Collections"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/service-collection-field-input"
                        },
                        "x-examples": {
                            "application/json": {
                                "name": "Region"
                            }
                        }
                    }
                ],
                "x-private": true
            },
            "parameters": [
                {
                    "name": "serviceCollectionId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ]
        },
        "/service-collections/{serviceCollectionId}/fields/{fieldId}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Update service collection field",
                "operationId": "update-service-collection-field",
                "tags": [
                    "Service Collections"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/service-collection-field-input"
                        },
                        "x-examples": {
                            "application/json": {
                                "name": "Subregion"
                            }
                        }
                    }
                ],
                "x-private": true
            },
            "parameters": [
                {
                    "name": "serviceCollectionId",
                    "in": "path",
                    "type": "string",
                    "required": true
                },
                {
                    "name": "fieldId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ],
            "delete": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Delete field from Service Collection",
                "operationId": "delete-service-collection-field",
                "tags": [
                    "Service Collections"
                ],
                "x-private": true
            }
        },
        "/service-collections/{serviceCollectionId}": {
            "delete": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Delete a Service Collection",
                "operationId": "delete-service-collection",
                "tags": [
                    "Service Collections"
                ],
                "x-private": true
            },
            "parameters": [
                {
                    "name": "serviceCollectionId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ],
            "put": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Update Service Collection",
                "description": "\t\t\t",
                "operationId": "update-service-collection",
                "tags": [
                    "Service Collections"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/service-collection-input"
                        },
                        "x-examples": {
                            "application/json": {
                                "name": "Nacho Hotels",
                                "description": "Ownership group for Nacho Hotels, Inc."
                            }
                        }
                    }
                ],
                "x-private": true
            }
        },
        "/services/{serviceId}/analytics/sign-url": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Sign Mode Analytics URL",
                "operationId": "sign-mode-url",
                "tags": [
                    "Analytics"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "report_id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "start_date",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "end_date",
                        "type": "string"
                    }
                ],
                "x-private": true
            },
            "parameters": [
                {
                    "name": "serviceId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ]
        },
        "/services/{serviceId}/analytics/report-list": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Get List of Mode Analytics Reports",
                "operationId": "get-mode-reports",
                "tags": [
                    "Analytics"
                ],
                "x-private": true
            },
            "parameters": [
                {
                    "name": "serviceId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ]
        },
        "/services/{serviceId}/messages/{messageId}": {
            "delete": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "tags": [
                    "Messages"
                ],
                "operationId": "delete-message"
            },
            "parameters": [
                {
                    "name": "serviceId",
                    "in": "path",
                    "type": "string",
                    "required": true
                },
                {
                    "name": "messageId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ]
        },
        "/services/{serviceId}/contact-log": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/contact-log"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "result": "failure",
                                    "action": "ignored",
                                    "name": "nulla sint i",
                                    "phone": "ipsum elit",
                                    "email": "amet",
                                    "source": "in cillum aute velit",
                                    "receivedAt": "1952-12-12T02:42:43.540Z",
                                    "matchedOn": "phone",
                                    "errors": [
                                        "ea anim dolor exercitation dolor",
                                        "reprehenderit",
                                        "velit sed nostrud dolore in",
                                        "elit"
                                    ]
                                }
                            ]
                        }
                    }
                },
                "summary": "Get a list of entries from the Contact Import Log",
                "operationId": "list-contact-import-log",
                "tags": [
                    "Contact Import Log"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "range[start]",
                        "type": "string",
                        "format": "date-time",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "range[end]",
                        "type": "string",
                        "format": "date-time",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "query",
                        "type": "string"
                    }
                ]
            },
            "parameters": [
                {
                    "name": "serviceId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ]
        },
        "/saml/idps/lookup": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "domainCode": {
                                    "type": "string"
                                },
                                "metadataUri": {
                                    "type": "string"
                                },
                                "issuerUri": {
                                    "type": "string"
                                },
                                "signOnUri": {
                                    "type": "string"
                                },
                                "logoutUri": {
                                    "type": "string"
                                },
                                "certificate": {
                                    "type": "string"
                                },
                                "requireEmail": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                },
                "summary": "Look up an IDP by domain code",
                "parameters": [
                    {
                        "in": "query",
                        "name": "domainCode",
                        "type": "string"
                    }
                ]
            }
        },
        "/services/{serviceId}/calendar/events": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "uuid": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "externalId": {
                                        "type": "string"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "startsAt": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "endsAt": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "allDay": {
                                        "type": "boolean"
                                    },
                                    "attendees": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    },
                                    "type": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "uuid": {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "fields": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "code": {
                                                            "type": "string"
                                                        },
                                                        "type": {
                                                            "type": "string"
                                                        },
                                                        "label": {
                                                            "type": "string"
                                                        },
                                                        "template": {
                                                            "type": "boolean"
                                                        },
                                                        "eventType": {
                                                            "type": "string",
                                                            "format": "uuid"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "List all calendar events",
                "tags": [
                    "Calendar Events"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {}
                    }
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "attendees": {
                                    "type": "array",
                                    "format": "uuid",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "type": {
                                    "type": "string",
                                    "format": "uuid"
                                },
                                "title": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "startsAt": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "endsAt": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "allDay": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "attendees",
                                "type",
                                "title",
                                "startsAt",
                                "endsAt",
                                "allDay"
                            ]
                        }
                    }
                ],
                "summary": "Create new calendar event",
                "tags": [
                    "Calendar Events"
                ]
            },
            "put": {
                "responses": {
                    "202": {
                        "description": "",
                        "schema": {}
                    }
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "attendees": {
                                    "type": "array",
                                    "format": "uuid",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "type": {
                                    "type": "string",
                                    "format": "uuid",
                                    "description": "**We don't allow type updates**. This is because different types have differents fields.\nThe type must be equal to the type that the calendar event already has assigned, otherwise, an error is thrown."
                                },
                                "title": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "startsAt": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "endsAt": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "allDay": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                ],
                "summary": "Update calendar event",
                "tags": [
                    "Calendar Events"
                ]
            },
            "parameters": [
                {
                    "name": "serviceId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ]
        },
        "/calendar/templates": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "code": {
                                        "type": "string"
                                    },
                                    "displayName": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "List of all available templates",
                "tags": [
                    "Calendar Events"
                ]
            }
        },
        "/services/{serviceId}/calendar/templates/type": {
            "post": {
                "responses": {
                    "202": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        },
                        "headers": {
                            "Location": {
                                "type": "string"
                            }
                        }
                    }
                },
                "summary": "Create a Event Type with Template",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Calendar Events"
                ]
            },
            "parameters": [
                {
                    "name": "serviceId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ]
        },
        "/services/{serviceId}/csv-import/upload": {
            "post": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "headers": {
                                    "type": "array",
                                    "items": {}
                                },
                                "sample": {
                                    "type": "array",
                                    "items": {}
                                }
                            }
                        }
                    }
                },
                "summary": "Upload CSV for manual import",
                "parameters": [
                    {
                        "in": "formData",
                        "name": "file",
                        "type": "file"
                    }
                ],
                "tags": [
                    "CSV Import"
                ]
            },
            "parameters": [
                {
                    "name": "serviceId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ]
        },
        "/services/{serviceId}/csv-import/process": {
            "post": {
                "responses": {
                    "202": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Process last updated CSV",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "beginAtRow": {
                                    "type": "integer"
                                },
                                "headerMap": {
                                    "type": "array",
                                    "items": {}
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "CSV Import"
                ]
            },
            "parameters": [
                {
                    "name": "serviceId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ]
        },
        "/services/{serviceId}/usage": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "total": {
                                    "type": "integer"
                                },
                                "purchased": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                },
                "summary": "Current usage",
                "tags": [
                    "Billing"
                ]
            },
            "parameters": [
                {
                    "name": "serviceId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ]
        },
        "/services/{serviceId}/calendar/events/bulk-upsert": {
            "post": {
                "responses": {
                    "204": {
                        "description": "Successfully upserted all events",
                        "schema": {}
                    },
                    "400": {
                        "description": "Invalid request parameters, for example a required field is missing or in update the type missmatch the event type."
                    },
                    "404": {
                        "description": "If at least one event to update doesn’t exist, the whole upsert operation will be aborted and a 404 returned."
                    },
                    "500": {
                        "description": "Internal error"
                    }
                },
                "tags": [
                    "Calendar Events"
                ],
                "summary": "Bulk edit calendar events",
                "description": "Bulk create and edit calendar events. If the event object has **uuid** the event will be updated, otherwise, a new event will be created.\n\nIf an error occurs, all changes made by the request will be reverted and an error message is returned with an appropriate HTTP code and more information in the response body.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "events": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "uuid": {
                                                "type": "string",
                                                "format": "uuid",
                                                "description": "Create new calendar event if not present"
                                            },
                                            "attendees": {
                                                "type": "array",
                                                "format": "uuid",
                                                "uniqueItems": true,
                                                "items": {
                                                    "allOf": [
                                                        {
                                                            "format": "uuid"
                                                        }
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "title": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "format": "uuid",
                                                "description": "**We don't allow type updates**. This is because different types have differents fields.\nIn an update, the type must be equal to the type that the calendar event already has assigned, otherwise, an error is thrown."
                                            },
                                            "description": {
                                                "type": "string"
                                            },
                                            "startsAt": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "endsAt": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "allDay": {
                                                "type": "boolean"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "x-examples": {
                            "application/json": {
                                "events": [
                                    {
                                        "uuid": "d869f8df-c784-c089-5fdc-7571582019b6",
                                        "attendees": [
                                            "urn:uuid:d2c82cf2-0baf-3b60-ead5-a5fc8fe4cca9"
                                        ],
                                        "title": "ex velit",
                                        "type": "d82bf522-ca07-2a19-2bda-6f538e6c21d9",
                                        "description": "",
                                        "startsAt": "1991-05-06T14:41:59.791Z",
                                        "endsAt": "1964-07-23T19:50:49.968Z",
                                        "allDay": true
                                    },
                                    {
                                        "uuid": "urn:uuid:f606a491-537f-1c3e-844e-4e25025bf67b",
                                        "attendees": [
                                            "urn:uuid:134d8974-384b-c152-ff9b-4306c7899bf0",
                                            "6b28d406-c816-ec57-4af0-4e829a71e3a5",
                                            "urn:uuid:46d7f0d9-052f-dd3a-23d5-98d4bec7b78e"
                                        ],
                                        "title": "eu",
                                        "type": "urn:uuid:7f888cfe-0c59-b1db-4071-e5b32a941dbb",
                                        "description": "do in aute",
                                        "startsAt": "1978-04-21T14:29:58.831Z",
                                        "endsAt": "1952-02-20T11:03:30.515Z",
                                        "allDay": true
                                    },
                                    {
                                        "uuid": "urn:uuid:02a4cd62-5187-feb0-3de0-fefa734dae31",
                                        "attendees": [
                                            "dee9d4ac-e217-e9b1-5b1a-5f9b7ccdc8cb",
                                            "b91557c2-12a9-07b2-5940-263cc4f998eb",
                                            "urn:uuid:78f80310-ec84-57dd-1259-9ca9b92eb885",
                                            "urn:uuid:be36001b-dfd5-ced6-8030-d13bfc0306f7",
                                            "776f0b51-ce40-0580-6faa-89ad0886d1bb"
                                        ],
                                        "title": "voluptate Lorem",
                                        "type": "b3066356-2b3d-f948-5d2f-b568a414ef91",
                                        "description": "nostrud",
                                        "startsAt": "1950-05-03T15:27:13.895Z",
                                        "endsAt": "1978-08-08T08:27:20.390Z",
                                        "allDay": false
                                    },
                                    {
                                        "uuid": "urn:uuid:9ce88d42-ae1e-c8bb-afe8-c800fb60c930",
                                        "attendees": [
                                            "18d44de1-ca9a-68e5-6a9f-bd59673ab01e",
                                            "7e730ae4-7de8-a62b-c53c-f3be84e9ca18"
                                        ],
                                        "title": "esse nisi et",
                                        "type": "e9e9ebf3-0bc0-4433-2902-7a02b22a02f5",
                                        "description": "dolor",
                                        "startsAt": "1987-08-23T20:43:41.509Z",
                                        "endsAt": "2012-03-01T19:12:02.235Z",
                                        "allDay": false
                                    },
                                    {
                                        "uuid": "b7e051b3-9471-80cf-cd28-d5bbb0888664",
                                        "attendees": [
                                            "urn:uuid:86512024-e831-7085-23fb-33f9b8ee4af7"
                                        ],
                                        "title": "ea id nisi",
                                        "type": "urn:uuid:89b3081c-83c7-8c3f-c43d-7ae0dffabba9",
                                        "description": "ut veniam",
                                        "startsAt": "1982-12-04T07:22:43.320Z",
                                        "endsAt": "2010-03-11T10:48:22.902Z",
                                        "allDay": true
                                    }
                                ]
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "basic": []
                    }
                ]
            },
            "parameters": [
                {
                    "name": "serviceId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ]
        },
        "/services/{serviceId}/calendar/events/bulk-delete": {
            "delete": {
                "responses": {
                    "204": {
                        "description": "Successfully deleted all events.",
                        "schema": {}
                    },
                    "404": {
                        "description": "If at least one event to delete doesn't exist, the whole delete operation will be reverted and a 404 returned."
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "events": {
                                    "type": "array",
                                    "format": "uuid",
                                    "uniqueItems": true,
                                    "items": {
                                        "allOf": [
                                            {
                                                "format": "uuid"
                                            }
                                        ],
                                        "type": "string"
                                    }
                                }
                            },
                            "required": [
                                "events"
                            ]
                        },
                        "x-examples": {
                            "application/json": {
                                "events": [
                                    "98bbc92c-a3eb-4a66-91a5-4bc5b2756a9f",
                                    "35b8fb05-f27b-1a7e-fdac-2c7b6a5b77b4"
                                ]
                            }
                        }
                    },
                    {
                        "in": "path",
                        "name": "serviceId",
                        "type": "string",
                        "required": true
                    }
                ],
                "summary": "Bulk delete calendar events",
                "tags": [
                    "Calendar Events"
                ],
                "security": [
                    {
                        "basic": []
                    }
                ],
                "description": "Bulk delete calendar events.\n\nIf an error occurs, all changes made by the request will be reverted and an error message is returned with an appropriate HTTP code and more information in the response body."
            },
            "parameters": [
                {
                    "name": "serviceId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ]
        },
        "/services/{serviceId}/users": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/user"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "id": "34439a01-1118-8e94-daa1-9c2dda874d8e",
                                    "firstName": "Duis",
                                    "lastName": "n",
                                    "createdAt": "2005-07-16T21:59:16.306Z",
                                    "updatedAt": "2012-02-20T08:42:29.242Z",
                                    "hotsosLogin": "si",
                                    "title": "",
                                    "signature": "pariatur c",
                                    "phone": "ullamco ",
                                    "email": "off",
                                    "username": "cupidata"
                                },
                                {
                                    "id": "f053a006-1cd6-6d0c-d299-0b47efa1608c",
                                    "firstName": "sit ea in ",
                                    "lastName": "v",
                                    "createdAt": "1961-09-24T15:42:04.121Z",
                                    "updatedAt": "1968-07-21T10:20:47.026Z",
                                    "hotsosLogin": "et aliqua ",
                                    "title": "",
                                    "signature": "incidid",
                                    "phone": "dolo",
                                    "email": "ex",
                                    "username": "enim co"
                                },
                                {
                                    "id": "fbdd60da-d024-fbcf-ffb2-2ed166b94287",
                                    "firstName": "dolor",
                                    "lastName": "e",
                                    "createdAt": "1967-11-25T09:34:37.790Z",
                                    "updatedAt": "1958-01-15T10:41:31.735Z",
                                    "hotsosLogin": "Ut Duis",
                                    "title": "ut u",
                                    "signature": "et dolore ",
                                    "phone": "vo",
                                    "email": "culpa e",
                                    "username": "inci"
                                },
                                {
                                    "id": "7b40ec1d-f511-7787-5c81-ea0d6af44488",
                                    "firstName": "culpa",
                                    "lastName": "ea",
                                    "createdAt": "1993-05-09T12:38:21.994Z",
                                    "updatedAt": "1951-06-12T19:32:52.888Z",
                                    "hotsosLogin": "nisi adi",
                                    "title": "mol",
                                    "signature": "ut Ut anim",
                                    "phone": "et mollit ",
                                    "email": "enim ame",
                                    "username": "c"
                                }
                            ]
                        }
                    }
                },
                "summary": "List Users",
                "operationId": "list-users",
                "tags": [
                    "Users"
                ]
            },
            "parameters": [
                {
                    "name": "serviceId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ],
            "post": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Create User",
                "operationId": "create-user",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/user-create-input"
                        },
                        "x-examples": {
                            "application/json": {
                                "username": "foo@example.com",
                                "uiRole": "dashboard_administrator",
                                "firstName": "Foo",
                                "lastName": "User",
                                "email": "foo@example.com"
                            }
                        }
                    }
                ]
            }
        },
        "/services/{serviceId}/features/{featureCode}": {
            "post": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Add feature to service",
                "parameters": [],
                "operationId": "add-feature",
                "tags": [
                    "Services"
                ]
            },
            "parameters": [
                {
                    "name": "serviceId",
                    "in": "path",
                    "type": "string",
                    "required": true
                },
                {
                    "name": "featureCode",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ],
            "delete": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Remove feature from service",
                "operationId": "remove-feature",
                "tags": [
                    "Services"
                ]
            }
        },
        "/phone-numbers/provision": {
            "post": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Provision a phone number",
                "operationId": "provision-phone-number",
                "tags": [
                    "Phone Numbers"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/phone-number-input"
                        },
                        "x-examples": {
                            "application/json": {
                                "country": "US",
                                "phone_number": "+18585551212",
                                "provider": "bandwidth"
                            }
                        }
                    }
                ]
            }
        },
        "/services/{serviceId}/channels": {
            "post": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Add service channel",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/service-channel-input"
                        },
                        "x-examples": {
                            "application/json": {
                                "channel_type_code": "phone_number",
                                "channel_value": "+18585551212",
                                "phone_number_carrier_code": "twilio_phone_number"
                            }
                        }
                    }
                ],
                "tags": [
                    "Services"
                ]
            },
            "parameters": [
                {
                    "name": "serviceId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ]
        },
        "/services/{serviceId}/zings/{zingId}/start": {
            "post": {
                "responses": {
                    "204": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Start a new workflow for the specified contact",
                "description": "Receive a contact id, external id or phone number to identify a contact and start the workflow specified in the url.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "oneOf": [
                                {
                                    "properties": {
                                        "contactId": {
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "contactId"
                                    ]
                                },
                                {
                                    "properties": {
                                        "externalId": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "externalId"
                                    ]
                                },
                                {
                                    "properties": {
                                        "phoneNumber": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "phoneNumber"
                                    ]
                                }
                            ],
                            "type": "object"
                        },
                        "x-examples": {
                            "application/json": {
                                "phoneNumber": "+131777814"
                            }
                        }
                    },
                    {
                        "in": "path",
                        "name": "serviceId",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "zingId",
                        "type": "integer",
                        "required": true
                    }
                ]
            },
            "parameters": [
                {
                    "name": "serviceId",
                    "in": "path",
                    "type": "string",
                    "required": true
                },
                {
                    "name": "zingId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ]
        },
        "/provision": {
            "post": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Provision one or more accounts & services",
                "x-private": true,
                "operationId": "provision",
                "tags": [
                    "Services"
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "jwt": []
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "notifyAdminUsers": {
                                    "type": "boolean"
                                },
                                "accounts": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "minLength": 1,
                                                "maxLength": 255
                                            },
                                            "billingDayOfMonth": {
                                                "type": "integer",
                                                "minimum": 1,
                                                "maximum": 31
                                            },
                                            "salesforceId": {
                                                "type": "string",
                                                "minLength": 10,
                                                "maxLength": 100
                                            },
                                            "industry": {
                                                "type": "string",
                                                "minLength": 0,
                                                "maxLength": 50
                                            },
                                            "services": {
                                                "type": [
                                                    "string",
                                                    "array"
                                                ],
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "minLength": 1,
                                                            "maxLength": 255
                                                        },
                                                        "plan": {
                                                            "type": "string",
                                                            "enum": [
                                                                "enterprise_platinum",
                                                                "enterprise_lite",
                                                                "zingle_basic",
                                                                "zingle_pro"
                                                            ]
                                                        },
                                                        "allottedUsers": {
                                                            "type": "integer",
                                                            "minimum": 1,
                                                            "maximum": 10000
                                                        },
                                                        "allottedMessages": {
                                                            "type": "integer",
                                                            "minimum": 1,
                                                            "maximum": 10000000
                                                        },
                                                        "features": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "account_manager",
                                                                    "account_users",
                                                                    "ai_message_categorization",
                                                                    "api",
                                                                    "assignment",
                                                                    "basic_messaging_250",
                                                                    "basic_messaging_500",
                                                                    "calendar_events",
                                                                    "chat",
                                                                    "contact_fields",
                                                                    "custom_automations",
                                                                    "custom_channels",
                                                                    "custom_chat",
                                                                    "custom_messaging",
                                                                    "engagement",
                                                                    "facebook_messenger",
                                                                    "group_messages",
                                                                    "group_messaging",
                                                                    "gsm_booster",
                                                                    "hospitality_integrations",
                                                                    "hotsos_integration",
                                                                    "infor",
                                                                    "intent_recognition",
                                                                    "international_messaging",
                                                                    "keyword_automations",
                                                                    "labels",
                                                                    "legacy_unlimited",
                                                                    "maestro",
                                                                    "message_translations",
                                                                    "mindbody",
                                                                    "mms",
                                                                    "mms_messages",
                                                                    "non_email_usernames",
                                                                    "opera_integration",
                                                                    "passage_ai",
                                                                    "platinum_support",
                                                                    "pro_messaging_1000",
                                                                    "pro_messaging_2000",
                                                                    "quantity_test",
                                                                    "quore",
                                                                    "registered_contacts",
                                                                    "registration_automations",
                                                                    "room_status",
                                                                    "scheduled_automations",
                                                                    "sentiment_analysis",
                                                                    "service_forwarding",
                                                                    "siteminder",
                                                                    "sms_messages",
                                                                    "social_messaging",
                                                                    "stayntouch",
                                                                    "survey_automations",
                                                                    "teams",
                                                                    "touchtone",
                                                                    "touchtone_gold",
                                                                    "touchtone_platinum",
                                                                    "touchtone_silver",
                                                                    "twilio_copilot",
                                                                    "twitter_direct_messaging",
                                                                    "users",
                                                                    "zapier"
                                                                ]
                                                            }
                                                        },
                                                        "timeZone": {
                                                            "type": "string",
                                                            "enum": [
                                                                "America/Anchorage",
                                                                "America/Araguaia",
                                                                "America/Argentina/San_Juan",
                                                                "America/Bahia",
                                                                "America/Belem",
                                                                "America/Boa_Vista",
                                                                "America/Campo_Grande",
                                                                "America/Chicago",
                                                                "America/Cuiaba",
                                                                "America/Denver",
                                                                "America/Fortaleza",
                                                                "America/Los_Angeles",
                                                                "America/Maceio",
                                                                "America/Manaus",
                                                                "America/New_York",
                                                                "America/Phoenix",
                                                                "America/Porto_Velho",
                                                                "America/Recife",
                                                                "America/Regina",
                                                                "America/Rio_branco",
                                                                "America/Sao_Paulo",
                                                                "Asia/Dubai",
                                                                "Asia/Tokyo",
                                                                "Australia/ACT",
                                                                "Australia/Adelaide",
                                                                "Australia/Brisbane",
                                                                "Australia/Broken_Hill",
                                                                "Australia/Canberra",
                                                                "Australia/Currie",
                                                                "Australia/Darwin",
                                                                "Australia/Eucla",
                                                                "Australia/Hobart",
                                                                "Australia/LHI",
                                                                "Australia/Lindeman",
                                                                "Australia/Lord_Howe",
                                                                "Australia/Melbourne",
                                                                "Australia/North",
                                                                "Australia/NSW",
                                                                "Australia/Perth",
                                                                "Australia/Queensland",
                                                                "Australia/South",
                                                                "Australia/Sydney",
                                                                "Australia/Tasmania",
                                                                "Australia/Victoria",
                                                                "Australia/West",
                                                                "Australia/Yancowinna",
                                                                "Canada/Atlantic",
                                                                "Canada/Central",
                                                                "Canada/Eastern",
                                                                "Canada/Mountain",
                                                                "Canada/Newfoundland",
                                                                "Canada/Pacific",
                                                                "Canada/Saskatchewan",
                                                                "Etc/GMT-4",
                                                                "Europe/Amsterdam",
                                                                "Europe/Athens",
                                                                "Europe/Berlin",
                                                                "Europe/Dublin",
                                                                "Europe/London",
                                                                "Europe/Paris",
                                                                "Pacific/Honolulu",
                                                                "Pacific/Samoa",
                                                                "UTC"
                                                            ]
                                                        },
                                                        "adminUsers": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "minLength": 5,
                                                                "maxLength": 320,
                                                                "pattern": "\\b[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}\\b"
                                                            }
                                                        }
                                                    },
                                                    "required": [
                                                        "name",
                                                        "plan",
                                                        "allottedUsers",
                                                        "allottedMessages",
                                                        "features",
                                                        "timeZone",
                                                        "adminUsers"
                                                    ]
                                                }
                                            }
                                        },
                                        "required": [
                                            "name",
                                            "billingDayOfMonth",
                                            "salesforceId",
                                            "services"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "notifyAdminUsers",
                                "accounts"
                            ]
                        },
                        "x-examples": {
                            "application/json": {
                                "notifyAdminUsers": true,
                                "accounts": [
                                    {
                                        "name": "Nacho Hotel Group",
                                        "billingDayOfMonth": 17,
                                        "salesforceId": "as97as97d",
                                        "services": [
                                            {
                                                "name": "Foo Resort East",
                                                "plan": "zingle_basic",
                                                "allottedUsers": 20,
                                                "allottedMessages": 10000,
                                                "features": [
                                                    "teams",
                                                    "social_messaging",
                                                    "scheduled_automations"
                                                ],
                                                "timeZone": "America/Los_Angeles",
                                                "adminUsers": [
                                                    "foo@example.com",
                                                    "bar@example.com"
                                                ]
                                            }
                                        ],
                                        "industry": "Hospitality"
                                    }
                                ]
                            }
                        }
                    }
                ]
            }
        },
        "/services/{serviceId}/feeds/{feedId}/notes": {
            "post": {
                "responses": {
                    "204": {
                        "$ref": "#/responses/record-accepted"
                    }
                },
                "summary": "Add an internal note to a Feed",
                "description": "Add an internal note to a Feed. Mentions can be added with the following tags:\n- If you want to mention a User: {u@xxx-xxx-xxx} \n- If you want to mention a whole Team: {t@xxx-xxx-xxx}\n\nWhere the \"xxx-xxx-xxx\" is the user or team's UUID.\n\nFor example:\n```\n{\n  \"body\": \"We need help here! {u@646349de-3d3f-4895-9eec-c3c85b9b16f5} {t@85c0a712-c618-46f8-b1e3-a20bdc0feeb3}\"\n}\n```",
                "parameters": [
                    {
                        "$ref": "#/parameters/serviceId"
                    },
                    {
                        "$ref": "#/parameters/feedId"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "body": {
                                    "type": "string"
                                }
                            }
                        },
                        "x-examples": {
                            "application/json": {
                                "body": "We need help here! {u@646349de-3d3f-4895-9eec-c3c85b9b16f5} {t@85c0a712-c618-46f8-b1e3-a20bdc0feeb3}"
                            }
                        }
                    }
                ],
                "tags": [
                    "Feeds"
                ]
            },
            "parameters": [
                {
                    "name": "serviceId",
                    "in": "path",
                    "type": "string",
                    "required": true
                },
                {
                    "name": "feedId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ]
        },
        "/users/account-access": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "total": {
                                    "type": "integer"
                                },
                                "currentPage": {
                                    "type": "integer"
                                },
                                "perPage": {
                                    "type": "integer"
                                },
                                "lastPage": {
                                    "type": "integer"
                                },
                                "items": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "status": {
                                                "type": "string",
                                                "enum": [
                                                    "active",
                                                    "expired",
                                                    "revoked"
                                                ]
                                            },
                                            "expiredAt": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "revokedAt": {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "format": "date-time"
                                            },
                                            "createdAt": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updatedAt": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        }
                                    }
                                },
                                "_links": {
                                    "type": "object",
                                    "properties": {
                                        "self": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "List account access history",
                "security": [
                    {
                        "jwt": []
                    }
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "type": "integer"
                    }
                ],
                "tags": [
                    "Users"
                ]
            },
            "post": {
                "responses": {
                    "204": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Grant account access",
                "security": [
                    {
                        "jwt": []
                    }
                ],
                "tags": [
                    "Users"
                ]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Revoke account access",
                "security": [
                    {
                        "jwt": []
                    }
                ],
                "tags": [
                    "Users"
                ]
            }
        },
        "/services/{serviceId}/hotsos/test-reservations": {
            "post": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "VIP": {
                                        "type": "boolean"
                                    },
                                    "FirstName": {
                                        "type": "string"
                                    },
                                    "LastName": {
                                        "type": "string"
                                    },
                                    "RoomNumber": {
                                        "type": "string"
                                    },
                                    "Email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "ProfileID": {
                                        "type": "string"
                                    },
                                    "Arrival": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "Departure": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "Status": {
                                        "type": "string",
                                        "enum": [
                                            "CHECKED_IN",
                                            "CANCELLED",
                                            "CHECKED_OUT",
                                            "RESERVED"
                                        ]
                                    },
                                    "SpecialRequests": {
                                        "type": "string"
                                    },
                                    "Salutation": {
                                        "type": "string"
                                    },
                                    "Phone": {
                                        "type": "string"
                                    },
                                    "Country": {
                                        "type": "string"
                                    },
                                    "Group": {
                                        "type": "object",
                                        "properties": {
                                            "ID": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "ExtendedAttributes": {
                                        "type": "object",
                                        "properties": {
                                            "ExtendedAttribute": {
                                                "type": "object",
                                                "properties": {
                                                    "Name": {
                                                        "type": "string",
                                                        "enum": [
                                                            "HOME",
                                                            "MOBILE",
                                                            "BUSINESS"
                                                        ]
                                                    },
                                                    "Value": {
                                                        "type": "object",
                                                        "properties": {
                                                            "#text": {
                                                                "type": "string",
                                                                "description": "Phone Number",
                                                                "example": "+14065551212"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "SortValue": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                },
                                "required": [
                                    "ProfileID",
                                    "Status",
                                    "SortValue"
                                ]
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "ID": "902914",
                                    "VIP": "null",
                                    "ExtendedAttributes": {
                                        "ExtendedAttribute": [
                                            {
                                                "Name": "HOME",
                                                "Value": {
                                                    "@xsi:type": "xsd:string",
                                                    "#text": "(203) 555-3396"
                                                }
                                            },
                                            {
                                                "Name": "MOBILE",
                                                "Value": {
                                                    "@xsi:type": "xsd:string",
                                                    "#text": "(517) 555-3678"
                                                }
                                            }
                                        ]
                                    },
                                    "FirstName": "Alexander",
                                    "LastName": "Parker",
                                    "RoomNumber": "4333",
                                    "Email": "edyth.gleason@example.com",
                                    "ProfileID": "647999",
                                    "Arrival": "2020-07-29T10:40:29-07:00",
                                    "Departure": "2020-08-08T10:40:29-07:00",
                                    "Status": "CHECKED_IN",
                                    "SpecialRequests": "NEWSPAPER",
                                    "Salutation": "Mr.",
                                    "Phone": "(332) 555-4998",
                                    "Country": "US",
                                    "Group": {
                                        "ID": "8454545"
                                    },
                                    "SortValue": "2020-08-20T10:40:29-07:00"
                                }
                            ]
                        }
                    }
                },
                "summary": "Test HotSOS contact integration",
                "x-private": true,
                "operationId": "hotsos-contact-test",
                "tags": [
                    "HotSOS"
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ]
            },
            "parameters": [
                {
                    "name": "serviceId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ]
        },
        "/services/{serviceId}/contacts/export": {
            "get": {
                "responses": {
                    "200": {
                        "description": "CSV when given a list of contact integer ids and that list is under the limit that is reasonable to stream.",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "204": {
                        "description": "When request is received and successfully queued up for export."
                    },
                    "401": {
                        "description": "When request is not properly authorized."
                    },
                    "404": {
                        "description": "When service is not found"
                    }
                },
                "summary": "Export contacts",
                "tags": [
                    "Contacts"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "contactIds": {
                                    "type": "array",
                                    "description": "Should contact integer ids.",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                "searchTerm": {
                                    "type": "string"
                                },
                                "conditions": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "comparisonMethodCode": {
                                                "type": "string"
                                            },
                                            "comparisonSource": {
                                                "type": "string"
                                            },
                                            "comparisonValue": {
                                                "type": [
                                                    "string",
                                                    "number",
                                                    "integer",
                                                    "boolean"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]
            },
            "parameters": [
                {
                    "name": "serviceId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ]
        },
        "/notification/{userId}/preferences": {
            "put": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "user": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "uuid": {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "username": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        },
                                        "firstName": {
                                            "type": [
                                                "null",
                                                "string"
                                            ]
                                        },
                                        "lastName": {
                                            "type": [
                                                "null",
                                                "string"
                                            ]
                                        },
                                        "title": {
                                            "type": [
                                                "null",
                                                "string"
                                            ]
                                        },
                                        "phoneNumber": {
                                            "type": [
                                                "null",
                                                "string"
                                            ]
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "desktop": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "maximum": 15
                                },
                                "mobile": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "maximum": 15
                                },
                                "email": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "maximum": 15
                                }
                            }
                        }
                    }
                },
                "summary": "Update notification preferences",
                "security": [
                    {
                        "jwt": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/userId"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "desktop": {
                                    "type": "integer",
                                    "format": "int32",
                                    "minimum": 0,
                                    "maximum": 15
                                },
                                "mobile": {
                                    "type": "integer",
                                    "format": "int32",
                                    "minimum": 0,
                                    "maximum": 15
                                },
                                "email": {
                                    "type": "integer",
                                    "format": "int32",
                                    "minimum": 0,
                                    "maximum": 15
                                }
                            }
                        },
                        "x-examples": {
                            "application/json": {
                                "desktop": 5,
                                "mobile": 2,
                                "email": 8
                            }
                        }
                    }
                ]
            },
            "parameters": [
                {
                    "name": "userId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ]
        },
        "/oauth/exchange": {
            "post": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "token": {
                                    "type": "string",
                                    "description": "JWT Token for user."
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "For various bad responses, body of response should contain a reason."
                    },
                    "404": {
                        "description": "For unknown identities or providers."
                    },
                    "418": {
                        "description": "For ¯\\_(ツ)/¯ errors"
                    }
                },
                "summary": "Exchange an access code for a jwt token",
                "tags": [
                    "Security"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "provider": {
                                    "type": "string",
                                    "description": "Either provider code or IDP id."
                                },
                                "code": {
                                    "type": "string",
                                    "description": "Access code from successful oauth request."
                                }
                            },
                            "required": [
                                "provider",
                                "code"
                            ]
                        },
                        "x-examples": {}
                    }
                ]
            }
        },
        "/token": {
            "post": {
                "responses": {
                    "200": {
                        "description": "JWT Auth Token",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "token": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Token is expired",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "summary": "Get a JWT token used for Auth",
                "tags": [
                    "Security"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "privilege",
                        "type": "string"
                    }
                ]
            }
        },
        "/services/{serviceId}/events": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        },
                        "examples": {
                            "application/json": {
                                "total": 454,
                                "currentPage": 1,
                                "perPage": 50,
                                "lastPage": 10,
                                "items": [
                                    {
                                        "id": "5b46b798-4b52-4bc7-aef9-2773476c5f3a",
                                        "type": "note",
                                        "body": "We need help here! ",
                                        "contactId": "458e7cac-04d0-4751-aea3-14fe813645cd",
                                        "serviceId": "3091f4ec-4d6b-4834-8d20-dd23a13e75ca",
                                        "createdAt": "2020-09-01T15:05:03+0000",
                                        "user": {
                                            "id": 1,
                                            "uuid": "6b7a220e-ef28-405a-b2eb-7a9ba64a022e",
                                            "firstName": "John",
                                            "lastName": "Doe",
                                            "title": null,
                                            "signature": null,
                                            "phone": null,
                                            "hotsosLogin": null,
                                            "avatarUrl": "https://cdn.zingle.me/4fe/58/e2/75/94763fe460a6e621ef26097416e7dee.jpeg",
                                            "email": "user@zingle.me",
                                            "emailValidated": true,
                                            "username": "user@zingle.me",
                                            "teams": [
                                                "4960afc0-e20a-4a85-b700-4c528f9e702e"
                                            ],
                                            "privileges": [],
                                            "createdAt": "2020-07-31T12:30:35+0000",
                                            "updatedAt": "2020-10-09T13:10:17+0000"
                                        },
                                        "workflow": {
                                            "name": null,
                                            "id": null
                                        }
                                    },
                                    {
                                        "id": "f46aeebb-f19c-486f-bfd1-704f4a8cb348",
                                        "type": "note",
                                        "body": "We need help here! ",
                                        "contactId": "458e7cac-04d0-4751-aea3-14fe813645cd",
                                        "serviceId": "3091f4ec-4d6b-4834-8d20-dd23a13e75ca",
                                        "createdAt": "2020-09-01T15:06:20+0000",
                                        "user": {
                                            "id": 1,
                                            "uuid": "6b7a220e-ef28-405a-b2eb-7a9ba64a022e",
                                            "firstName": "John",
                                            "lastName": "Doe",
                                            "title": null,
                                            "signature": null,
                                            "phone": null,
                                            "hotsosLogin": null,
                                            "avatarUrl": "https://cdn.zingle.me/4fe/58/e2/75/94763fe460a6e621ef26097416e7dee.jpeg",
                                            "email": "user@zingle.me",
                                            "emailValidated": true,
                                            "username": "user@zingle.me",
                                            "teams": [
                                                "4960afc0-e20a-4a85-b700-4c528f9e702e"
                                            ],
                                            "privileges": [],
                                            "createdAt": "2020-07-31T12:30:35+0000",
                                            "updatedAt": "2020-10-09T13:10:17+0000"
                                        },
                                        "workflow": {
                                            "name": null,
                                            "id": null
                                        }
                                    },
                                    {
                                        "id": "1f9c6447-684c-46c0-a277-5a72ad4c5f8b",
                                        "type": "note",
                                        "body": "We need help here! ",
                                        "contactId": "458e7cac-04d0-4751-aea3-14fe813645cd",
                                        "serviceId": "3091f4ec-4d6b-4834-8d20-dd23a13e75ca",
                                        "createdAt": "2020-09-01T15:09:29+0000",
                                        "user": {
                                            "id": 1,
                                            "uuid": "6b7a220e-ef28-405a-b2eb-7a9ba64a022e",
                                            "firstName": "John",
                                            "lastName": "Doe",
                                            "title": null,
                                            "signature": null,
                                            "phone": null,
                                            "hotsosLogin": null,
                                            "avatarUrl": "https://cdn.zingle.me/4fe/58/e2/75/94763fe460a6e621ef26097416e7dee.jpeg",
                                            "email": "user@zingle.me",
                                            "emailValidated": true,
                                            "username": "user@zingle.me",
                                            "teams": [
                                                "4960afc0-e20a-4a85-b700-4c528f9e702e"
                                            ],
                                            "privileges": [],
                                            "createdAt": "2020-07-31T12:30:35+0000",
                                            "updatedAt": "2020-10-09T13:10:17+0000"
                                        },
                                        "workflow": {
                                            "name": null,
                                            "id": null
                                        }
                                    },
                                    {
                                        "id": "7bc72425-b58e-4536-8f6b-53d84e7f1bc1",
                                        "type": "note",
                                        "body": "We need help here! ",
                                        "contactId": "458e7cac-04d0-4751-aea3-14fe813645cd",
                                        "serviceId": "3091f4ec-4d6b-4834-8d20-dd23a13e75ca",
                                        "createdAt": "2020-09-01T15:16:36+0000",
                                        "user": {
                                            "id": 1,
                                            "uuid": "6b7a220e-ef28-405a-b2eb-7a9ba64a022e",
                                            "firstName": "John",
                                            "lastName": "Doe",
                                            "title": null,
                                            "signature": null,
                                            "phone": null,
                                            "hotsosLogin": null,
                                            "avatarUrl": "https://cdn.zingle.me/4fe/58/e2/75/94763fe460a6e621ef26097416e7dee.jpeg",
                                            "email": "user@zingle.me",
                                            "emailValidated": true,
                                            "username": "user@zingle.me",
                                            "teams": [
                                                "4960afc0-e20a-4a85-b700-4c528f9e702e"
                                            ],
                                            "privileges": [],
                                            "createdAt": "2020-07-31T12:30:35+0000",
                                            "updatedAt": "2020-10-09T13:10:17+0000"
                                        },
                                        "workflow": {
                                            "name": null,
                                            "id": null
                                        }
                                    },
                                    {
                                        "id": "85373292-b18c-48ac-8f74-025ca12c6316",
                                        "type": "note",
                                        "body": "We need help here! tiger",
                                        "contactId": "458e7cac-04d0-4751-aea3-14fe813645cd",
                                        "serviceId": "3091f4ec-4d6b-4834-8d20-dd23a13e75ca",
                                        "createdAt": "2020-09-01T15:24:09+0000",
                                        "user": {
                                            "id": 1,
                                            "uuid": "6b7a220e-ef28-405a-b2eb-7a9ba64a022e",
                                            "firstName": "John",
                                            "lastName": "Doe",
                                            "title": null,
                                            "signature": null,
                                            "phone": null,
                                            "hotsosLogin": null,
                                            "avatarUrl": "https://cdn.zingle.me/4fe/58/e2/75/94763fe460a6e621ef26097416e7dee.jpeg",
                                            "email": "user@zingle.me",
                                            "emailValidated": true,
                                            "username": "user@zingle.me",
                                            "teams": [
                                                "4960afc0-e20a-4a85-b700-4c528f9e702e"
                                            ],
                                            "privileges": [],
                                            "createdAt": "2020-07-31T12:30:35+0000",
                                            "updatedAt": "2020-10-09T13:10:17+0000"
                                        },
                                        "workflow": {
                                            "name": null,
                                            "id": null
                                        }
                                    },
                                    {
                                        "id": "df3f374c-51ed-4456-80d5-fb71727b4cef",
                                        "type": "workflow_started",
                                        "contactId": "458e7cac-04d0-4751-aea3-14fe813645cd",
                                        "serviceId": "3091f4ec-4d6b-4834-8d20-dd23a13e75ca",
                                        "createdAt": "2020-09-01T21:08:42+0000",
                                        "workflow": {
                                            "name": "notes",
                                            "id": 3
                                        }
                                    },
                                    {
                                        "id": "81557a55-5b96-40c4-977c-90c9935224e4",
                                        "type": "note",
                                        "contactId": "458e7cac-04d0-4751-aea3-14fe813645cd",
                                        "serviceId": "3091f4ec-4d6b-4834-8d20-dd23a13e75ca",
                                        "createdAt": "2020-09-01T21:08:43+0000",
                                        "workflow": {
                                            "name": "notes",
                                            "id": 3
                                        }
                                    },
                                    {
                                        "id": "747fe98d-441d-4a1c-b4d2-9d2de5115fac",
                                        "type": "workflow_ended",
                                        "contactId": "458e7cac-04d0-4751-aea3-14fe813645cd",
                                        "serviceId": "3091f4ec-4d6b-4834-8d20-dd23a13e75ca",
                                        "createdAt": "2020-09-01T21:09:32+0000",
                                        "user": {
                                            "id": 1,
                                            "uuid": "6b7a220e-ef28-405a-b2eb-7a9ba64a022e",
                                            "firstName": "John",
                                            "lastName": "Doe",
                                            "title": null,
                                            "signature": null,
                                            "phone": null,
                                            "hotsosLogin": null,
                                            "avatarUrl": "https://cdn.zingle.me/4fe/58/e2/75/94763fe460a6e621ef26097416e7dee.jpeg",
                                            "email": "user@zingle.me",
                                            "emailValidated": true,
                                            "username": "user@zingle.me",
                                            "teams": [
                                                "4960afc0-e20a-4a85-b700-4c528f9e702e"
                                            ],
                                            "privileges": [],
                                            "createdAt": "2020-07-31T12:30:35+0000",
                                            "updatedAt": "2020-10-09T13:10:17+0000"
                                        },
                                        "workflow": {
                                            "name": "notes",
                                            "id": 3
                                        }
                                    },
                                    {
                                        "id": "9a5c4fc0-caa7-49f6-bec6-8a05f7d32f5f",
                                        "type": "mark_confirmed",
                                        "contactId": "0b5b15d0-9458-4dd2-8ad2-aa0eb7229a4e",
                                        "serviceId": "3091f4ec-4d6b-4834-8d20-dd23a13e75ca",
                                        "createdAt": "2020-09-01T21:09:37+0000",
                                        "user": {
                                            "id": 1,
                                            "uuid": "6b7a220e-ef28-405a-b2eb-7a9ba64a022e",
                                            "firstName": "John",
                                            "lastName": "Doe",
                                            "title": null,
                                            "signature": null,
                                            "phone": null,
                                            "hotsosLogin": null,
                                            "avatarUrl": "https://cdn.zingle.me/4fe/58/e2/75/94763fe460a6e621ef26097416e7dee.jpeg",
                                            "email": "user@zingle.me",
                                            "emailValidated": true,
                                            "username": "user@zingle.me",
                                            "teams": [
                                                "4960afc0-e20a-4a85-b700-4c528f9e702e"
                                            ],
                                            "privileges": [],
                                            "createdAt": "2020-07-31T12:30:35+0000",
                                            "updatedAt": "2020-10-09T13:10:17+0000"
                                        },
                                        "workflow": {
                                            "name": null,
                                            "id": null
                                        }
                                    },
                                    {
                                        "id": "e00c3b9a-d756-4636-b428-cc498dd8bfc3",
                                        "type": "workflow_started",
                                        "contactId": "0b5b15d0-9458-4dd2-8ad2-aa0eb7229a4e",
                                        "serviceId": "3091f4ec-4d6b-4834-8d20-dd23a13e75ca",
                                        "createdAt": "2020-09-01T21:09:47+0000",
                                        "workflow": {
                                            "name": "notes",
                                            "id": 3
                                        }
                                    },
                                    {
                                        "id": "17e93112-c264-421f-8df9-f0f0b32a4897",
                                        "type": "note",
                                        "contactId": "0b5b15d0-9458-4dd2-8ad2-aa0eb7229a4e",
                                        "serviceId": "3091f4ec-4d6b-4834-8d20-dd23a13e75ca",
                                        "createdAt": "2020-09-01T21:09:48+0000",
                                        "workflow": {
                                            "name": "notes",
                                            "id": 3
                                        }
                                    },
                                    {
                                        "id": "a687c882-65c5-4272-bdd7-1dff5fcbc672",
                                        "type": "workflow_ended",
                                        "contactId": "0b5b15d0-9458-4dd2-8ad2-aa0eb7229a4e",
                                        "serviceId": "3091f4ec-4d6b-4834-8d20-dd23a13e75ca",
                                        "createdAt": "2020-09-01T21:21:17+0000",
                                        "user": {
                                            "id": 1,
                                            "uuid": "6b7a220e-ef28-405a-b2eb-7a9ba64a022e",
                                            "firstName": "John",
                                            "lastName": "Doe",
                                            "title": null,
                                            "signature": null,
                                            "phone": null,
                                            "hotsosLogin": null,
                                            "avatarUrl": "https://cdn.zingle.me/4fe/58/e2/75/94763fe460a6e621ef26097416e7dee.jpeg",
                                            "email": "user@zingle.me",
                                            "emailValidated": true,
                                            "username": "user@zingle.me",
                                            "teams": [
                                                "4960afc0-e20a-4a85-b700-4c528f9e702e"
                                            ],
                                            "privileges": [],
                                            "createdAt": "2020-07-31T12:30:35+0000",
                                            "updatedAt": "2020-10-09T13:10:17+0000"
                                        },
                                        "workflow": {
                                            "name": "notes",
                                            "id": 3
                                        }
                                    },
                                    {
                                        "id": "889ce18b-57a2-40db-8eea-9aff90470569",
                                        "type": "workflow_started",
                                        "contactId": "0b5b15d0-9458-4dd2-8ad2-aa0eb7229a4e",
                                        "serviceId": "3091f4ec-4d6b-4834-8d20-dd23a13e75ca",
                                        "createdAt": "2020-09-01T21:21:31+0000",
                                        "workflow": {
                                            "name": "notes",
                                            "id": 3
                                        }
                                    },
                                    {
                                        "id": "71982dc8-9c20-41f4-a66e-0333fe9e39fe",
                                        "type": "note",
                                        "body": "hello John Doe",
                                        "contactId": "0b5b15d0-9458-4dd2-8ad2-aa0eb7229a4e",
                                        "serviceId": "3091f4ec-4d6b-4834-8d20-dd23a13e75ca",
                                        "createdAt": "2020-09-01T21:21:34+0000",
                                        "workflow": {
                                            "name": "notes",
                                            "id": 3
                                        }
                                    }
                                ],
                                "_links": {
                                    "self": "https://api.zingle.me/v2/organizations/c787d4f4-867f-4b2f-8c18-828b87f42466/events?page=1",
                                    "next": "https://api.zingle.me/v2/organizations/c787d4f4-867f-4b2f-8c18-828b87f42466/events?page=2"
                                }
                            }
                        }
                    }
                },
                "summary": "Return events by service",
                "security": [
                    {
                        "jwt": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/serviceId"
                    },
                    {
                        "in": "query",
                        "name": "start",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "end",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "group_by_contact",
                        "type": "boolean"
                    }
                ],
                "tags": [
                    "Services"
                ]
            },
            "parameters": [
                {
                    "name": "serviceId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ]
        },
        "/organizations/{organizationId}/events": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        },
                        "examples": {
                            "application/json": {
                                "total": 454,
                                "currentPage": 1,
                                "perPage": 50,
                                "lastPage": 10,
                                "items": [
                                    {
                                        "id": "5b46b798-4b52-4bc7-aef9-2773476c5f3a",
                                        "type": "note",
                                        "body": "We need help here! ",
                                        "contactId": "458e7cac-04d0-4751-aea3-14fe813645cd",
                                        "serviceId": "3091f4ec-4d6b-4834-8d20-dd23a13e75ca",
                                        "createdAt": "2020-09-01T15:05:03+0000",
                                        "user": {
                                            "id": 1,
                                            "uuid": "6b7a220e-ef28-405a-b2eb-7a9ba64a022e",
                                            "firstName": "John",
                                            "lastName": "Doe",
                                            "title": null,
                                            "signature": null,
                                            "phone": null,
                                            "hotsosLogin": null,
                                            "avatarUrl": "https://cdn.zingle.me/4fe/58/e2/75/94763fe460a6e621ef26097416e7dee.jpeg",
                                            "email": "user@zingle.me",
                                            "emailValidated": true,
                                            "username": "user@zingle.me",
                                            "teams": [
                                                "4960afc0-e20a-4a85-b700-4c528f9e702e"
                                            ],
                                            "privileges": [],
                                            "createdAt": "2020-07-31T12:30:35+0000",
                                            "updatedAt": "2020-10-09T13:10:17+0000"
                                        },
                                        "workflow": {
                                            "name": null,
                                            "id": null
                                        }
                                    },
                                    {
                                        "id": "f46aeebb-f19c-486f-bfd1-704f4a8cb348",
                                        "type": "note",
                                        "body": "We need help here! ",
                                        "contactId": "458e7cac-04d0-4751-aea3-14fe813645cd",
                                        "serviceId": "3091f4ec-4d6b-4834-8d20-dd23a13e75ca",
                                        "createdAt": "2020-09-01T15:06:20+0000",
                                        "user": {
                                            "id": 1,
                                            "uuid": "6b7a220e-ef28-405a-b2eb-7a9ba64a022e",
                                            "firstName": "John",
                                            "lastName": "Doe",
                                            "title": null,
                                            "signature": null,
                                            "phone": null,
                                            "hotsosLogin": null,
                                            "avatarUrl": "https://cdn.zingle.me/4fe/58/e2/75/94763fe460a6e621ef26097416e7dee.jpeg",
                                            "email": "user@zingle.me",
                                            "emailValidated": true,
                                            "username": "user@zingle.me",
                                            "teams": [
                                                "4960afc0-e20a-4a85-b700-4c528f9e702e"
                                            ],
                                            "privileges": [],
                                            "createdAt": "2020-07-31T12:30:35+0000",
                                            "updatedAt": "2020-10-09T13:10:17+0000"
                                        },
                                        "workflow": {
                                            "name": null,
                                            "id": null
                                        }
                                    },
                                    {
                                        "id": "1f9c6447-684c-46c0-a277-5a72ad4c5f8b",
                                        "type": "note",
                                        "body": "We need help here! ",
                                        "contactId": "458e7cac-04d0-4751-aea3-14fe813645cd",
                                        "serviceId": "3091f4ec-4d6b-4834-8d20-dd23a13e75ca",
                                        "createdAt": "2020-09-01T15:09:29+0000",
                                        "user": {
                                            "id": 1,
                                            "uuid": "6b7a220e-ef28-405a-b2eb-7a9ba64a022e",
                                            "firstName": "John",
                                            "lastName": "Doe",
                                            "title": null,
                                            "signature": null,
                                            "phone": null,
                                            "hotsosLogin": null,
                                            "avatarUrl": "https://cdn.zingle.me/4fe/58/e2/75/94763fe460a6e621ef26097416e7dee.jpeg",
                                            "email": "user@zingle.me",
                                            "emailValidated": true,
                                            "username": "user@zingle.me",
                                            "teams": [
                                                "4960afc0-e20a-4a85-b700-4c528f9e702e"
                                            ],
                                            "privileges": [],
                                            "createdAt": "2020-07-31T12:30:35+0000",
                                            "updatedAt": "2020-10-09T13:10:17+0000"
                                        },
                                        "workflow": {
                                            "name": null,
                                            "id": null
                                        }
                                    },
                                    {
                                        "id": "7bc72425-b58e-4536-8f6b-53d84e7f1bc1",
                                        "type": "note",
                                        "body": "We need help here! ",
                                        "contactId": "458e7cac-04d0-4751-aea3-14fe813645cd",
                                        "serviceId": "3091f4ec-4d6b-4834-8d20-dd23a13e75ca",
                                        "createdAt": "2020-09-01T15:16:36+0000",
                                        "user": {
                                            "id": 1,
                                            "uuid": "6b7a220e-ef28-405a-b2eb-7a9ba64a022e",
                                            "firstName": "John",
                                            "lastName": "Doe",
                                            "title": null,
                                            "signature": null,
                                            "phone": null,
                                            "hotsosLogin": null,
                                            "avatarUrl": "https://cdn.zingle.me/4fe/58/e2/75/94763fe460a6e621ef26097416e7dee.jpeg",
                                            "email": "user@zingle.me",
                                            "emailValidated": true,
                                            "username": "user@zingle.me",
                                            "teams": [
                                                "4960afc0-e20a-4a85-b700-4c528f9e702e"
                                            ],
                                            "privileges": [],
                                            "createdAt": "2020-07-31T12:30:35+0000",
                                            "updatedAt": "2020-10-09T13:10:17+0000"
                                        },
                                        "workflow": {
                                            "name": null,
                                            "id": null
                                        }
                                    },
                                    {
                                        "id": "85373292-b18c-48ac-8f74-025ca12c6316",
                                        "type": "note",
                                        "body": "We need help here! tiger",
                                        "contactId": "458e7cac-04d0-4751-aea3-14fe813645cd",
                                        "serviceId": "3091f4ec-4d6b-4834-8d20-dd23a13e75ca",
                                        "createdAt": "2020-09-01T15:24:09+0000",
                                        "user": {
                                            "id": 1,
                                            "uuid": "6b7a220e-ef28-405a-b2eb-7a9ba64a022e",
                                            "firstName": "John",
                                            "lastName": "Doe",
                                            "title": null,
                                            "signature": null,
                                            "phone": null,
                                            "hotsosLogin": null,
                                            "avatarUrl": "https://cdn.zingle.me/4fe/58/e2/75/94763fe460a6e621ef26097416e7dee.jpeg",
                                            "email": "user@zingle.me",
                                            "emailValidated": true,
                                            "username": "user@zingle.me",
                                            "teams": [
                                                "4960afc0-e20a-4a85-b700-4c528f9e702e"
                                            ],
                                            "privileges": [],
                                            "createdAt": "2020-07-31T12:30:35+0000",
                                            "updatedAt": "2020-10-09T13:10:17+0000"
                                        },
                                        "workflow": {
                                            "name": null,
                                            "id": null
                                        }
                                    },
                                    {
                                        "id": "df3f374c-51ed-4456-80d5-fb71727b4cef",
                                        "type": "workflow_started",
                                        "contactId": "458e7cac-04d0-4751-aea3-14fe813645cd",
                                        "serviceId": "3091f4ec-4d6b-4834-8d20-dd23a13e75ca",
                                        "createdAt": "2020-09-01T21:08:42+0000",
                                        "workflow": {
                                            "name": "notes",
                                            "id": 3
                                        }
                                    },
                                    {
                                        "id": "81557a55-5b96-40c4-977c-90c9935224e4",
                                        "type": "note",
                                        "contactId": "458e7cac-04d0-4751-aea3-14fe813645cd",
                                        "serviceId": "3091f4ec-4d6b-4834-8d20-dd23a13e75ca",
                                        "createdAt": "2020-09-01T21:08:43+0000",
                                        "workflow": {
                                            "name": "notes",
                                            "id": 3
                                        }
                                    },
                                    {
                                        "id": "747fe98d-441d-4a1c-b4d2-9d2de5115fac",
                                        "type": "workflow_ended",
                                        "contactId": "458e7cac-04d0-4751-aea3-14fe813645cd",
                                        "serviceId": "3091f4ec-4d6b-4834-8d20-dd23a13e75ca",
                                        "createdAt": "2020-09-01T21:09:32+0000",
                                        "user": {
                                            "id": 1,
                                            "uuid": "6b7a220e-ef28-405a-b2eb-7a9ba64a022e",
                                            "firstName": "John",
                                            "lastName": "Doe",
                                            "title": null,
                                            "signature": null,
                                            "phone": null,
                                            "hotsosLogin": null,
                                            "avatarUrl": "https://cdn.zingle.me/4fe/58/e2/75/94763fe460a6e621ef26097416e7dee.jpeg",
                                            "email": "user@zingle.me",
                                            "emailValidated": true,
                                            "username": "user@zingle.me",
                                            "teams": [
                                                "4960afc0-e20a-4a85-b700-4c528f9e702e"
                                            ],
                                            "privileges": [],
                                            "createdAt": "2020-07-31T12:30:35+0000",
                                            "updatedAt": "2020-10-09T13:10:17+0000"
                                        },
                                        "workflow": {
                                            "name": "notes",
                                            "id": 3
                                        }
                                    },
                                    {
                                        "id": "9a5c4fc0-caa7-49f6-bec6-8a05f7d32f5f",
                                        "type": "mark_confirmed",
                                        "contactId": "0b5b15d0-9458-4dd2-8ad2-aa0eb7229a4e",
                                        "serviceId": "3091f4ec-4d6b-4834-8d20-dd23a13e75ca",
                                        "createdAt": "2020-09-01T21:09:37+0000",
                                        "user": {
                                            "id": 1,
                                            "uuid": "6b7a220e-ef28-405a-b2eb-7a9ba64a022e",
                                            "firstName": "John",
                                            "lastName": "Doe",
                                            "title": null,
                                            "signature": null,
                                            "phone": null,
                                            "hotsosLogin": null,
                                            "avatarUrl": "https://cdn.zingle.me/4fe/58/e2/75/94763fe460a6e621ef26097416e7dee.jpeg",
                                            "email": "user@zingle.me",
                                            "emailValidated": true,
                                            "username": "user@zingle.me",
                                            "teams": [
                                                "4960afc0-e20a-4a85-b700-4c528f9e702e"
                                            ],
                                            "privileges": [],
                                            "createdAt": "2020-07-31T12:30:35+0000",
                                            "updatedAt": "2020-10-09T13:10:17+0000"
                                        },
                                        "workflow": {
                                            "name": null,
                                            "id": null
                                        }
                                    },
                                    {
                                        "id": "e00c3b9a-d756-4636-b428-cc498dd8bfc3",
                                        "type": "workflow_started",
                                        "contactId": "0b5b15d0-9458-4dd2-8ad2-aa0eb7229a4e",
                                        "serviceId": "3091f4ec-4d6b-4834-8d20-dd23a13e75ca",
                                        "createdAt": "2020-09-01T21:09:47+0000",
                                        "workflow": {
                                            "name": "notes",
                                            "id": 3
                                        }
                                    },
                                    {
                                        "id": "17e93112-c264-421f-8df9-f0f0b32a4897",
                                        "type": "note",
                                        "contactId": "0b5b15d0-9458-4dd2-8ad2-aa0eb7229a4e",
                                        "serviceId": "3091f4ec-4d6b-4834-8d20-dd23a13e75ca",
                                        "createdAt": "2020-09-01T21:09:48+0000",
                                        "workflow": {
                                            "name": "notes",
                                            "id": 3
                                        }
                                    },
                                    {
                                        "id": "a687c882-65c5-4272-bdd7-1dff5fcbc672",
                                        "type": "workflow_ended",
                                        "contactId": "0b5b15d0-9458-4dd2-8ad2-aa0eb7229a4e",
                                        "serviceId": "3091f4ec-4d6b-4834-8d20-dd23a13e75ca",
                                        "createdAt": "2020-09-01T21:21:17+0000",
                                        "user": {
                                            "id": 1,
                                            "uuid": "6b7a220e-ef28-405a-b2eb-7a9ba64a022e",
                                            "firstName": "John",
                                            "lastName": "Doe",
                                            "title": null,
                                            "signature": null,
                                            "phone": null,
                                            "hotsosLogin": null,
                                            "avatarUrl": "https://cdn.zingle.me/4fe/58/e2/75/94763fe460a6e621ef26097416e7dee.jpeg",
                                            "email": "user@zingle.me",
                                            "emailValidated": true,
                                            "username": "user@zingle.me",
                                            "teams": [
                                                "4960afc0-e20a-4a85-b700-4c528f9e702e"
                                            ],
                                            "privileges": [],
                                            "createdAt": "2020-07-31T12:30:35+0000",
                                            "updatedAt": "2020-10-09T13:10:17+0000"
                                        },
                                        "workflow": {
                                            "name": "notes",
                                            "id": 3
                                        }
                                    },
                                    {
                                        "id": "889ce18b-57a2-40db-8eea-9aff90470569",
                                        "type": "workflow_started",
                                        "contactId": "0b5b15d0-9458-4dd2-8ad2-aa0eb7229a4e",
                                        "serviceId": "3091f4ec-4d6b-4834-8d20-dd23a13e75ca",
                                        "createdAt": "2020-09-01T21:21:31+0000",
                                        "workflow": {
                                            "name": "notes",
                                            "id": 3
                                        }
                                    },
                                    {
                                        "id": "71982dc8-9c20-41f4-a66e-0333fe9e39fe",
                                        "type": "note",
                                        "body": "hello John Doe",
                                        "contactId": "0b5b15d0-9458-4dd2-8ad2-aa0eb7229a4e",
                                        "serviceId": "3091f4ec-4d6b-4834-8d20-dd23a13e75ca",
                                        "createdAt": "2020-09-01T21:21:34+0000",
                                        "workflow": {
                                            "name": "notes",
                                            "id": 3
                                        }
                                    }
                                ],
                                "_links": {
                                    "self": "https://api.zingle.me/v2/organizations/c787d4f4-867f-4b2f-8c18-828b87f42466/events?page=1",
                                    "next": "https://api.zingle.me/v2/organizations/c787d4f4-867f-4b2f-8c18-828b87f42466/events?page=2"
                                }
                            }
                        }
                    }
                },
                "summary": "Return events that belong to services in organization",
                "security": [
                    {
                        "jwt": []
                    }
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "start",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "end",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "group_by_contact",
                        "type": "boolean"
                    },
                    {
                        "$ref": "#/parameters/organizationId"
                    }
                ],
                "tags": [
                    "Organizations"
                ]
            },
            "parameters": [
                {
                    "name": "organizationId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ]
        },
        "/organizations/{organizationId}/contact-import-configurations/{integration}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "beginAtRow": {
                                    "type": "integer"
                                },
                                "mapping": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Organization Contact Imports"
                ],
                "summary": "Add mapping configuration for organization integration",
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "parameters": [
                {
                    "name": "organizationId",
                    "in": "path",
                    "type": "string",
                    "required": true
                },
                {
                    "name": "integration",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ],
            "post": {
                "responses": {
                    "202": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Enable integration mapping on organization.",
                "tags": [
                    "Organization Contact Imports"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "responses": {
                    "202": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Disable integration mapping for organization",
                "tags": [
                    "Organization Contact Imports"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/organizations/{organizationId}/services/{serviceId}": {
            "post": {
                "responses": {
                    "202": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "400": {
                        "description": ""
                    }
                },
                "summary": "Add a service to an organization",
                "tags": [
                    "Organizations"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "organizationId",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "serviceId",
                        "type": "string",
                        "required": true
                    }
                ],
                "description": ""
            },
            "parameters": [
                {
                    "name": "organizationId",
                    "in": "path",
                    "type": "string",
                    "required": true
                },
                {
                    "name": "serviceId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ],
            "delete": {
                "responses": {
                    "202": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Remove service from organization",
                "tags": [
                    "Organizations"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "organizationId",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "serviceId",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "/organizations": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "currentPage": {
                                    "type": "number"
                                },
                                "lastPage": {
                                    "type": "number"
                                },
                                "perPage": {
                                    "type": "number"
                                },
                                "total": {
                                    "type": "number"
                                },
                                "items": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "createdAt": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updatedAt": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "displayName": {
                                                "type": "string"
                                            },
                                            "users": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "number"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "format": "email"
                                                        },
                                                        "firstName": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "lastName": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "avatarUrl": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "organizationId": {
                                                            "type": "string",
                                                            "format": "uuid"
                                                        },
                                                        "roleId": {
                                                            "type": "number"
                                                        },
                                                        "username": {
                                                            "type": "string"
                                                        },
                                                        "uuid": {
                                                            "type": "string",
                                                            "format": "uuid"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "_links": {
                                    "type": "object",
                                    "properties": {
                                        "self": {
                                            "type": "string",
                                            "format": "uri"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Organizations"
                ],
                "summary": "Paginate organizations",
                "parameters": [
                    {
                        "in": "path",
                        "name": "page",
                        "type": "number",
                        "required": true,
                        "default": "1"
                    },
                    {
                        "in": "path",
                        "name": "query",
                        "type": "string",
                        "required": true,
                        "default": "Org Name"
                    }
                ],
                "security": [
                    {
                        "basic": []
                    }
                ]
            },
            "post": {
                "responses": {
                    "202": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        },
                        "headers": {
                            "Location": {
                                "type": "string",
                                "pattern": "https://api.zingle.me/v2/organizations/{organizationId}",
                                "description": "URI of Org",
                                "default": "https://api.zingle.me/v2/organizations/00000000-0000-0000-0000-000000000000"
                            }
                        }
                    }
                },
                "summary": "Create an organization",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "displayName": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "displayName"
                            ]
                        },
                        "x-examples": {
                            "application/json": {
                                "displayName": "Lorem Ipsum"
                            }
                        }
                    }
                ],
                "tags": [
                    "Organizations"
                ]
            }
        },
        "/organizations/{organizationId}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "format": "uuid"
                                },
                                "createdAt": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "updatedAt": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "displayName": {
                                    "type": "string"
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "number"
                                            },
                                            "email": {
                                                "type": "string",
                                                "format": "email"
                                            },
                                            "firstName": {
                                                "type": [
                                                    "string",
                                                    "null"
                                                ]
                                            },
                                            "lastName": {
                                                "type": [
                                                    "string",
                                                    "null"
                                                ]
                                            },
                                            "avatarUrl": {
                                                "type": [
                                                    "string",
                                                    "null"
                                                ]
                                            },
                                            "organizationId": {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "roleId": {
                                                "type": "number"
                                            },
                                            "username": {
                                                "type": "string"
                                            },
                                            "uuid": {
                                                "type": "string",
                                                "format": "uuid"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieve organization",
                "tags": [
                    "Organizations"
                ]
            },
            "parameters": [
                {
                    "name": "organizationId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ],
            "put": {
                "responses": {
                    "202": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Update organization",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "displayName": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Organizations"
                ]
            },
            "delete": {
                "responses": {
                    "202": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "x-private": true,
                "summary": "Delete organization",
                "tags": [
                    "Organizations"
                ]
            }
        },
        "/organizations/{organizationId}/users": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "User organization search",
                "tags": [
                    "Organizations"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "q",
                        "type": "string",
                        "description": "Query term"
                    }
                ]
            },
            "parameters": [
                {
                    "name": "organizationId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ],
            "post": {
                "responses": {
                    "202": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "400": {
                        "description": "No matching role"
                    },
                    "406": {
                        "description": "Matching user is unassignable"
                    }
                },
                "summary": "Add user to organization",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "email": {
                                    "type": "string"
                                },
                                "firstName": {
                                    "type": "string"
                                },
                                "lastName": {
                                    "type": "string"
                                },
                                "role": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Organizations"
                ]
            }
        },
        "/organizations/{organizationId}/users/{userId}": {
            "put": {
                "responses": {
                    "202": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Update user org role",
                "tags": [
                    "Organizations"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "role": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ]
            },
            "parameters": [
                {
                    "name": "organizationId",
                    "in": "path",
                    "type": "string",
                    "required": true
                },
                {
                    "name": "userId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ],
            "delete": {
                "responses": {
                    "202": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "406": {
                        "description": "Unable to remove given user from organization"
                    }
                },
                "summary": "Remove user from organization",
                "tags": [
                    "Organizations"
                ]
            }
        },
        "/organizations/{organizationId}/services": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Get list of services in organization",
                "tags": [
                    "Organizations"
                ]
            },
            "parameters": [
                {
                    "name": "organizationId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ]
        },
        "/organizations/{organizationId}/bulk-import/{integration}": {
            "post": {
                "responses": {
                    "202": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Bulk Import Contacts into Organization Services",
                "tags": [
                    "Organization Contact Imports"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "string",
                            "description": "Base64-encoded file to import"
                        },
                        "x-examples": {
                            "text/plain": "Rmlyc3QgTmFtZSxMYXN0IE5hbWUsUGhvbmUKTGVlbG9vLERhbGxhcywrMTQwNjU1NTEyMTI="
                        }
                    }
                ],
                "operationId": "organization-contact-import",
                "description": "Imports a delimited file (CSV, TSV, pipe-delimited) for an organization using the organization's current import mapping configuration.",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "application/json"
                ]
            },
            "parameters": [
                {
                    "name": "organizationId",
                    "in": "path",
                    "type": "string",
                    "required": true
                },
                {
                    "name": "integration",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ]
        },
        "/token/refresh": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "token": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": ""
                    }
                },
                "summary": "Refresh JWT Token",
                "tags": [
                    "Security"
                ],
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/organizations/{organizationId}/contact-fields": {
            "get": {
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "description": "When organization missing or organization has no services."
                    }
                },
                "summary": "List Organization Contact Fields",
                "tags": [
                    "Contact Fields"
                ],
                "security": [
                    {
                        "jwt": []
                    }
                ]
            },
            "parameters": [
                {
                    "name": "organizationId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ]
        },
        "/services/{serviceId}/service_code": {
            "post": {
                "responses": {
                    "202": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "404": {
                        "description": ""
                    }
                },
                "summary": "Add/Update service code to service",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "Services"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "serviceId",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "header",
                        "name": "service_code",
                        "type": "string"
                    }
                ]
            },
            "parameters": [
                {
                    "name": "serviceId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ],
            "delete": {
                "responses": {
                    "202": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "404": {
                        "description": ""
                    }
                },
                "summary": "Remove service code from a service",
                "parameters": [
                    {
                        "in": "path",
                        "name": "serviceId",
                        "type": "string",
                        "required": true
                    }
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "Services"
                ]
            }
        }
    },
    "definitions": {
        "template": {
            "title": "Template",
            "allOf": [
                {
                    "$ref": "#/definitions/object-id"
                },
                {
                    "$ref": "#/definitions/template-input"
                },
                {
                    "$ref": "#/definitions/timestamps"
                }
            ]
        },
        "template-input": {
            "type": "object",
            "title": "Template Input",
            "required": [
                "name",
                "body"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50,
                    "example": "Checkin Message"
                },
                "body": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 1600,
                    "example": "Welcome to the Hotel California, we hope you enjoy your stay"
                }
            }
        },
        "contact-field-input": {
            "type": "object",
            "title": "Contact Field Input",
            "properties": {
                "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "string",
                        "date",
                        "boolean",
                        "time"
                    ]
                },
                "options": {
                    "type": "array",
                    "uniqueItems": true,
                    "description": "If specified, contact field input will be displayed as a dropdown in the Zingle interface.",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "name",
                "type"
            ]
        },
        "contact-field": {
            "allOf": [
                {
                    "$ref": "#/definitions/object-id"
                },
                {
                    "$ref": "#/definitions/contact-field-input"
                },
                {
                    "$ref": "#/definitions/timestamps"
                }
            ],
            "title": "Contact Field"
        },
        "timestamps": {
            "type": "object",
            "title": "Timestamps",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "required": [
                "createdAt",
                "updatedAt"
            ]
        },
        "object-id": {
            "type": "object",
            "title": "ID",
            "properties": {
                "id": {
                    "type": "string",
                    "pattern": "^[a-f\\d]{8}\\-[a-f\\d]{4}\\-[a-f\\d]{4}\\-[a-f\\d]{4}\\-[a-f\\d]{12}"
                }
            },
            "required": [
                "id"
            ]
        },
        "tag-input": {
            "type": "object",
            "title": "Tag Input",
            "properties": {
                "name": {
                    "type": "string",
                    "minLength": 50,
                    "maxLength": 50,
                    "example": "Foo"
                },
                "textColor": {
                    "type": "string",
                    "description": "Hex String",
                    "minLength": 7,
                    "maxLength": 7,
                    "pattern": "^\\#[A-F0-9]{6}$"
                },
                "backgroundColor": {
                    "type": "string",
                    "minLength": 7,
                    "maxLength": 7,
                    "pattern": "^\\#[A-F0-9]{6}$"
                }
            },
            "required": [
                "name",
                "textColor"
            ]
        },
        "tag": {
            "allOf": [
                {
                    "$ref": "#/definitions/object-id"
                },
                {
                    "$ref": "#/definitions/tag-input"
                },
                {
                    "$ref": "#/definitions/timestamps"
                }
            ],
            "title": "Tag"
        },
        "message-input": {
            "title": "Message Input",
            "allOf": [
                {
                    "properties": {
                        "recipients": {
                            "type": "array",
                            "minItems": 1,
                            "maxItems": 50,
                            "items": {
                                "$ref": "#/definitions/message-recipient"
                            }
                        }
                    }
                },
                {
                    "properties": {
                        "body": {
                            "type": "string"
                        },
                        "attachments": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/attachment"
                            }
                        },
                        "deduplicationId": {
                            "type": "string"
                        },
                        "delayMinutes": {
                            "type": "number"
                        },
                        "templateId": {
                            "type": "string"
                        },
                        "sourceLanguage": {
                            "type": "string"
                        },
                        "destinationLanguage": {
                            "type": "string"
                        }
                    }
                }
            ],
            "type": "object"
        },
        "message-recipient": {
            "oneOf": [
                {
                    "$ref": "#/definitions/phone-recipient"
                },
                {
                    "$ref": "#/definitions/condition-recipient"
                },
                {
                    "$ref": "#/definitions/entity-recipient"
                },
                {
                    "$ref": "#/definitions/all-contacts-recipient"
                }
            ],
            "title": "Message Recipient"
        },
        "error": {
            "type": "object",
            "title": "Error",
            "properties": {
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "fieldErrors": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "field": {
                                "type": "string"
                            },
                            "errors": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "validation-error": {
            "type": "object",
            "properties": {},
            "title": "Validation Error"
        },
        "user": {
            "title": "User",
            "allOf": [
                {
                    "$ref": "#/definitions/object-id"
                },
                {
                    "$ref": "#/definitions/user-profile-input"
                },
                {
                    "$ref": "#/definitions/timestamps"
                }
            ]
        },
        "user-profile-input": {
            "type": "object",
            "title": "User Profile Input",
            "properties": {
                "firstName": {
                    "type": "string",
                    "maxLength": 50
                },
                "lastName": {
                    "type": "string",
                    "maxLength": 50
                },
                "hotsosLogin": {
                    "type": "string",
                    "maxLength": 200
                },
                "title": {
                    "type": "string",
                    "maxLength": 150
                },
                "signature": {
                    "type": "string",
                    "maxLength": 255
                },
                "phone": {
                    "type": "string",
                    "maxLength": 50
                },
                "email": {
                    "type": "string",
                    "maxLength": 255
                },
                "username": {
                    "type": "string",
                    "maxLength": 255
                },
                "avatarUrl": {
                    "type": "string"
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/object-id"
                    }
                },
                "privileges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "firstName",
                "lastName"
            ]
        },
        "segment-input": {
            "type": "object",
            "title": "Segment Input",
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 100
                },
                "backgroundColor": {
                    "type": "string"
                },
                "textColor": {
                    "type": "string"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/condition"
                    }
                }
            },
            "required": [
                "name",
                "backgroundColor",
                "textColor",
                "conditions"
            ]
        },
        "condition": {
            "type": "object",
            "title": "Condition",
            "properties": {
                "method": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "segment": {
            "title": "Segment",
            "allOf": [
                {
                    "$ref": "#/definitions/object-id"
                },
                {
                    "$ref": "#/definitions/segment-input"
                },
                {
                    "$ref": "#/definitions/timestamps"
                }
            ]
        },
        "attachment": {
            "type": "object",
            "title": "Attachment",
            "properties": {
                "content": {
                    "type": "string",
                    "description": "base64 string"
                },
                "mimeType": {
                    "type": "string",
                    "pattern": "^[A-Za-z\\d]+\\/[A-Za-z\\d]+$"
                },
                "filename": {
                    "type": "string",
                    "pattern": "^.+\\..+$"
                }
            },
            "required": [
                "content",
                "mimeType",
                "filename"
            ]
        },
        "phone-recipient": {
            "type": "object",
            "title": "Phone Recipient",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "phone",
                        "wechat",
                        "facebook",
                        "line",
                        "chat",
                        "email"
                    ]
                },
                "value": {
                    "type": "string"
                }
            },
            "required": [
                "type",
                "value"
            ]
        },
        "condition-recipient": {
            "type": "object",
            "title": "Condition Recipient",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "conditions"
                    ]
                },
                "conditions": {
                    "type": [
                        "string",
                        "array"
                    ],
                    "items": {
                        "$ref": "#/definitions/condition"
                    }
                },
                "fuzzySearchTerm": {
                    "type": "string",
                    "maxLength": 50
                }
            },
            "required": [
                "type",
                "conditions"
            ]
        },
        "entity-recipient": {
            "type": "object",
            "title": "Entity Recipient",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "contact",
                        "segment",
                        "tag"
                    ]
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                }
            },
            "required": [
                "type",
                "id"
            ]
        },
        "contact-input": {
            "type": "object",
            "title": "Contact Input",
            "properties": {
                "firstName": {
                    "type": "string",
                    "maxLength": 255
                },
                "lastName": {
                    "type": "string",
                    "maxLength": 255
                },
                "title": {
                    "type": "string",
                    "maxLength": 20,
                    "example": "Mr."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "maxLength": 100
                    }
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "allOf": [
                            {
                                "$ref": "#/definitions/channel-input"
                            },
                            {
                                "type": [
                                    "string",
                                    "object"
                                ],
                                "properties": {
                                    "isActive": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        ]
                    }
                },
                "externalId": {
                    "type": "string",
                    "description": "You may optionally specify a unique ID for the contact.  If supplied, this may be used to query and update the contact.",
                    "maxLength": 50
                },
                "conversationProperties": {
                    "type": "object",
                    "properties": {
                        "isClosed": {
                            "type": "boolean"
                        },
                        "isUnread": {
                            "type": "boolean"
                        },
                        "assignedToUserId": {
                            "type": "string",
                            "maxLength": 36,
                            "description": "Contact may be assigned to a user or team, but not both."
                        },
                        "assignedToTeamId": {
                            "type": "string",
                            "maxLength": 36
                        }
                    }
                },
                "notes": {
                    "type": "string",
                    "maxLength": 1500
                },
                "contactFields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/contact-field-value-input"
                    }
                }
            }
        },
        "contact": {
            "type": "object",
            "title": "Contact",
            "properties": {
                "": {
                    "type": "string"
                }
            }
        },
        "channel-input": {
            "type": "object",
            "title": "Channel Input",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "phone_number",
                        "wechat",
                        "line",
                        "facebook_messenger",
                        "email_address"
                    ],
                    "example": "phone_number"
                },
                "value": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "+18585551212"
                }
            },
            "required": [
                "type",
                "value"
            ]
        },
        "contact-field-value-input": {
            "type": "object",
            "title": "Contact Field Value Input",
            "properties": {
                "contactFieldName": {
                    "type": "string",
                    "maxLength": 255
                },
                "value": {
                    "oneOf": [
                        {
                            "type": "string",
                            "maxLength": 255
                        },
                        {
                            "type": "string",
                            "format": "date"
                        },
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "number"
                        },
                        {
                            "type": "string",
                            "format": "time"
                        }
                    ],
                    "description": "Field value. Must be one "
                }
            }
        },
        "all-contacts-recipient": {
            "type": "object",
            "title": "All Contacts Recipient",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "allContacts"
                    ]
                }
            }
        },
        "message-category-input": {
            "type": "object",
            "title": "Message Category Input",
            "properties": {
                "name": {
                    "type": "string",
                    "minLength": "1",
                    "maxLength": "20"
                }
            },
            "required": [
                "name"
            ]
        },
        "message-category": {
            "title": "Message Category",
            "allOf": [
                {
                    "$ref": "#/definitions/object-id"
                },
                {
                    "$ref": "#/definitions/message-category-input"
                },
                {
                    "$ref": "#/definitions/timestamps"
                }
            ]
        },
        "integration-input": {
            "type": "object",
            "title": "Integration Input",
            "properties": {
                "auth_token": {
                    "type": "string"
                }
            }
        },
        "integration": {
            "title": "Integration",
            "allOf": [
                {
                    "$ref": "#/definitions/integration-input"
                },
                {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "code": {
                            "type": "string"
                        },
                        "requires_auth_token": {
                            "type": "string"
                        },
                        "auth_token": {
                            "type": "string"
                        },
                        "status": {
                            "type": "string"
                        },
                        "configuration": {
                            "type": "array",
                            "items": {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/integration-configuration-input"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "field_type": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        "allows_mapping_fields": {
                            "type": "boolean"
                        }
                    }
                }
            ]
        },
        "integration-configuration-input": {
            "type": "object",
            "title": "Integration Configuration Input",
            "properties": {
                "code": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "integration-configuration": {
            "title": "Integration Configuration",
            "allOf": [
                {
                    "$ref": "#/definitions/integration-configuration-input"
                },
                {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "field_type": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "integration-field-mapping-input": {
            "type": "object",
            "title": "Integration Field Mapping Input",
            "properties": {
                "begin_at_row": {
                    "type": "number"
                },
                "column_field_mapping": {
                    "type": "object",
                    "description": "Array of column headers (keys) mapped to Zingle contact fields (values)"
                }
            }
        },
        "integration-field-mapping": {
            "title": "Integration Field Mapping",
            "allOf": [
                {
                    "$ref": "#/definitions/integration-field-mapping-input"
                },
                {
                    "type": "object",
                    "properties": {
                        "last_received_at": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "sample_data": {
                            "type": "object",
                            "properties": {
                                "headers": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "rows": {
                                    "type": "array",
                                    "items": {}
                                }
                            }
                        },
                        "status": {
                            "type": "string",
                            "enum": [
                                "awaiting_receipt",
                                "awaiting_configuration"
                            ]
                        }
                    }
                }
            ]
        },
        "webhook-input": {
            "type": "object",
            "title": "Webhook Input",
            "properties": {
                "url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 500
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                },
                "events": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "enabled": {
                    "type": "boolean"
                }
            }
        },
        "webhook": {
            "allOf": [
                {
                    "$ref": "#/definitions/object-id"
                },
                {
                    "$ref": "#/definitions/webhook-input"
                }
            ],
            "title": "Webhook"
        },
        "service-collection-input": {
            "type": "object",
            "title": "Service Collection Input",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ]
        },
        "contact-log": {
            "type": "object",
            "title": "Contact Log",
            "properties": {
                "result": {
                    "type": "string",
                    "enum": [
                        "success",
                        "failure",
                        "warning"
                    ]
                },
                "action": {
                    "type": "string",
                    "enum": [
                        "created",
                        "updated",
                        "ignored"
                    ]
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "receivedAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "matchedOn": {
                    "type": "string",
                    "enum": [
                        "external_id",
                        "phone",
                        "email"
                    ]
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "service-collection-field-input": {
            "type": "object",
            "title": "Service Collection Field Input",
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ]
        },
        "service-collection": {
            "title": "Service Collection",
            "allOf": [
                {
                    "$ref": "#/definitions/object-id"
                },
                {
                    "$ref": "#/definitions/service-collection-input"
                },
                {
                    "type": "object",
                    "properties": {
                        "fields": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service-collection"
                            }
                        }
                    }
                }
            ]
        },
        "service-collection-field": {
            "title": "Service Collection Field",
            "allOf": [
                {
                    "$ref": "#/definitions/object-id"
                },
                {
                    "$ref": "#/definitions/service-collection-field-input"
                },
                {
                    "type": "object",
                    "properties": {
                        "values": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            ]
        },
        "service-collection-service-input": {
            "type": "object",
            "title": "Service Collection Service Input",
            "properties": {
                "field_values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service-collection-field-value-input"
                    }
                }
            }
        },
        "service-collection-service": {
            "title": "Service Collection Service",
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "name": {
                    "type": "string"
                },
                "field_values": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/service-collection-service-input"
                        },
                        {
                            "type": "object",
                            "properties": {
                                "field_name": {
                                    "type": "string"
                                }
                            }
                        }
                    ]
                }
            }
        },
        "service-collection-field-value-input": {
            "type": "object",
            "title": "Service Collection Field Value Input",
            "properties": {
                "field_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "value": {
                    "type": "string"
                }
            },
            "required": [
                "field_id",
                "value"
            ]
        },
        "service-collection-field-value": {
            "title": "Service Collection Field Value",
            "allOf": [
                {
                    "$ref": "#/definitions/service-collection-field-value-input"
                },
                {
                    "type": "object",
                    "properties": {
                        "field_name": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "simple-idp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "domainCode": {
                    "type": "string"
                },
                "metadataUri": {
                    "type": "string"
                },
                "issuerUri": {
                    "type": "string"
                },
                "signOnUri": {
                    "type": "string"
                },
                "logoutUri": {
                    "type": "string"
                },
                "certificate": {
                    "type": "string"
                },
                "requireEmail": {
                    "type": "boolean"
                }
            },
            "title": "Simple IDP"
        },
        "phone-number-input": {
            "type": "object",
            "title": "Phone Number Input",
            "properties": {
                "country": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 2
                },
                "phoneNumber": {
                    "type": "string"
                },
                "provider": {
                    "type": "string",
                    "enum": [
                        "bandwidth",
                        "twilio_phone_number"
                    ]
                }
            },
            "required": [
                "country",
                "phoneNumber",
                "provider"
            ]
        },
        "service-channel-input": {
            "type": "object",
            "title": "Service Channel Input",
            "properties": {
                "channel_type_code": {
                    "type": "string",
                    "enum": [
                        "phone_number"
                    ]
                },
                "channel_value": {
                    "type": "string"
                },
                "phone_number_carrier_code": {
                    "type": "string",
                    "enum": [
                        "bandwidth",
                        "twilio_phone_number"
                    ]
                }
            },
            "required": [
                "channel_type_code",
                "channel_value",
                "phone_number_carrier_code"
            ]
        },
        "user-create-input": {
            "type": "object",
            "title": "User Create Input",
            "properties": {
                "username": {
                    "type": "string",
                    "maxLength": 50
                },
                "uiRole": {
                    "type": "string",
                    "enum": [
                        "dashboard_administrator",
                        "dashboard_standard",
                        "dashboard_standard_with_bulk_messaging",
                        "dashboard_standard_with_contact_deletion",
                        "dashboard_standard_with_analytics",
                        "dashboard_standard_with_bulk_messaging_with_contact_deletion",
                        "dashboard_standard_with_bulk_messaging_with_analytics",
                        "dashboard_standard_with_bulk_messaging_with_contact_deletion_with_analytics",
                        "dashboard_standard_with_contact_deletion_with_analytics",
                        "dashboard_standard_with_user_management",
                        "dashboard_standard_with_analytics_with_user_management",
                        "dashboard_standard_with_bulk_messaging_with_user_management",
                        "dashboard_standard_with_bulk_messaging_with_analytics_with_user_management",
                        "dashboard_standard_with_bulk_messaging_with_contact_deletion_with_user_management",
                        "dashboard_standard_with_bulk_messaging_with_contact_deletion_with_analytics_with_user_management",
                        "dashboard_standard_with_contact_deletion_with_user_management",
                        "dashboard_standard_with_contact_deletion_with_analytics_with_user_management"
                    ],
                    "maxLength": 50
                },
                "firstName": {
                    "type": "string",
                    "maxLength": 200
                },
                "lastName": {
                    "type": "string",
                    "maxLength": 150
                },
                "email": {
                    "type": "string",
                    "maxLength": 255
                }
            },
            "required": [
                "username",
                "uiRole"
            ]
        },
        "create-foo": {
            "type": "object",
            "title": "Create Foo",
            "properties": {
                "name": {
                    "type": "string"
                },
                "color": {
                    "type": "string"
                },
                "birthday": {
                    "type": "string"
                }
            }
        },
        "foo": {
            "title": "Foo",
            "allOf": [
                {
                    "$ref": "#/definitions/create-foo"
                },
                {
                    "$ref": "#/definitions/object-id"
                },
                {
                    "$ref": "#/definitions/timestamps"
                }
            ]
        }
    },
    "securityDefinitions": {
        "basic": {
            "type": "basic",
            "description": "HTTP Basic auth is available"
        },
        "jwt": {
            "type": "apiKey",
            "name": "api_key",
            "in": "header",
            "description": "JWT is available"
        },
        "bearer": {
            "type": "apiKey",
            "name": "Token",
            "in": "header"
        }
    },
    "parameters": {
        "serviceId": {
            "name": "serviceId",
            "in": "path",
            "type": "string",
            "required": true,
            "maxLength": 36,
            "minLength": 36
        },
        "templateId": {
            "in": "path",
            "type": "string",
            "required": true,
            "name": "Template ID",
            "maxLength": 36,
            "minLength": 36
        },
        "contactFieldId": {
            "name": "Contact Field ID",
            "in": "path",
            "type": "string",
            "required": true,
            "maxLength": 36,
            "minLength": 36
        },
        "tagId": {
            "name": "Tag ID",
            "in": "path",
            "type": "string",
            "required": true,
            "maxLength": 36,
            "minLength": 36
        },
        "userId": {
            "in": "path",
            "type": "string",
            "required": true,
            "name": "User ID"
        },
        "segmentId": {
            "in": "path",
            "type": "string",
            "required": true,
            "name": "Segment ID"
        },
        "externalContactId": {
            "name": "External Contact ID",
            "in": "path",
            "type": "string",
            "required": true
        },
        "contactId": {
            "name": "Contact ID",
            "in": "path",
            "type": "string",
            "required": true
        },
        "messageId": {
            "name": "Message ID",
            "in": "path",
            "type": "string",
            "required": true
        },
        "messageCategoryId": {
            "name": "Message Category ID",
            "in": "path",
            "type": "string",
            "required": true
        },
        "feedId": {
            "name": "feedId",
            "in": "path",
            "type": "string",
            "required": true,
            "maxLength": 36,
            "minLength": 36,
            "description": "Feed's UUID"
        },
        "mentions": {
            "name": "mentions",
            "in": "query",
            "type": "string",
            "enum": [
                "read",
                "unread"
            ],
            "description": "Filter contacts only with read or unread mentions in feeds"
        },
        "organizationId": {
            "name": "Organization ID",
            "in": "path",
            "type": "string",
            "required": true
        }
    },
    "responses": {
        "record-saved": {
            "description": "",
            "headers": {
                "Location": {
                    "type": "string",
                    "description": "API URI of the resource that was saved"
                }
            },
            "examples": {
                "application/json": {}
            }
        },
        "record-deleted": {
            "description": "",
            "examples": {
                "application/json": {}
            }
        },
        "request-validation-failed": {
            "description": "",
            "schema": {
                "$ref": "#/definitions/error"
            },
            "examples": {
                "application/json": {
                    "code": "voluptate commodo irure consectetur culpa",
                    "description": "dolore "
                }
            }
        },
        "record-accepted": {
            "description": "",
            "schema": {
                "type": "object",
                "properties": {}
            }
        },
        "see-other": {
            "description": "",
            "schema": {
                "type": "object",
                "properties": {}
            },
            "headers": {
                "Location": {
                    "type": "string"
                }
            }
        }
    },
    "tags": [
        {
            "name": "Analytics"
        },
        {
            "name": "Billing"
        },
        {
            "name": "Calendar Events"
        },
        {
            "name": "Contacts"
        },
        {
            "name": "Contact Fields"
        },
        {
            "name": "Contact Import Log"
        },
        {
            "name": "CSV Import"
        },
        {
            "name": "Feeds"
        },
        {
            "name": "HotSOS"
        },
        {
            "name": "Integrations"
        },
        {
            "name": "Message Categories"
        },
        {
            "name": "Messages",
            "description": "Something about messages"
        },
        {
            "name": "Organizations"
        },
        {
            "name": "Organization Contact Imports"
        },
        {
            "name": "Phone Numbers"
        },
        {
            "name": "Security"
        },
        {
            "name": "Services"
        },
        {
            "name": "Segments"
        },
        {
            "name": "Service Collections"
        },
        {
            "name": "Tags"
        },
        {
            "name": "Templates"
        },
        {
            "name": "Users"
        },
        {
            "name": "Webhooks"
        }
    ],
    "basePath": "/v2",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "security": [
        {
            "basic": []
        }
    ]
}